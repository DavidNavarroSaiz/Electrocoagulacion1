

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Aug 31 19:50:28 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F252
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19  0000                     
    20                           ; Version 1.42
    21                           ; Generated 13/04/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F252 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	idataBANK0
    56  000D6A                     __pidataBANK0:
    57                           	opt stack 0
    58                           
    59                           ;initializer for _sum
    60  000D6A  0020               	dw	32
    61  0000                     _PORTC	set	3970
    62  0000                     _PORTB	set	3969
    63  0000                     _LATC	set	3979
    64  0000                     _LATA	set	3977
    65  0000                     _TRISC	set	3988
    66  0000                     _TRISB	set	3987
    67  0000                     _TRISA	set	3986
    68  0000                     _PORTCbits	set	3970
    69  0000                     _LATCbits	set	3979
    70  0000                     _PORTA	set	3968
    71  0000                     _LATB	set	3978
    72  0000                     _ADCON1bits	set	4033
    73                           
    74                           ; #config settings
    75  0000                     
    76                           	psect	cinit
    77  000D42                     __pcinit:
    78                           	opt stack 0
    79  000D42                     start_initialization:
    80                           	opt stack 0
    81  000D42                     __initialization:
    82                           	opt stack 0
    83                           
    84                           ; Initialize objects allocated to BANK0 (2 bytes)
    85                           ; load TBLPTR registers with __pidataBANK0
    86  000D42  0E6A               	movlw	low __pidataBANK0
    87  000D44  6EF6               	movwf	tblptrl,c
    88  000D46  0E0D               	movlw	high __pidataBANK0
    89  000D48  6EF7               	movwf	tblptrh,c
    90  000D4A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
    91  000D4C  6EF8               	movwf	tblptru,c
    92  000D4E  0009               	tblrd		*+	;fetch initializer
    93  000D50  CFF5 F0C2          	movff	tablat,__pdataBANK0
    94  000D54  0009               	tblrd		*+	;fetch initializer
    95  000D56  CFF5 F0C3          	movff	tablat,__pdataBANK0+1
    96                           
    97                           ; Clear objects allocated to BANK0 (2 bytes)
    98  000D5A  0100               	movlb	0
    99  000D5C  6BC1               	clrf	(__pbssBANK0+1)& (0+255),b
   100  000D5E  6BC0               	clrf	__pbssBANK0& (0+255),b
   101  000D60                     end_of_initialization:
   102                           	opt stack 0
   103  000D60                     __end_of__initialization:
   104                           	opt stack 0
   105  000D60  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   106  000D62  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   107  000D64  0100               	movlb	0
   108  000D66  EF57  F000         	goto	_main	;jump to C main() function
   109                           tblptru	equ	0xFF8
   110                           tblptrh	equ	0xFF7
   111                           tblptrl	equ	0xFF6
   112                           tablat	equ	0xFF5
   113                           
   114                           	psect	bssBANK0
   115  0000C0                     __pbssBANK0:
   116                           	opt stack 0
   117  0000C0                     _comp:
   118                           	opt stack 0
   119  0000C0                     	ds	2
   120                           tblptru	equ	0xFF8
   121                           tblptrh	equ	0xFF7
   122                           tblptrl	equ	0xFF6
   123                           tablat	equ	0xFF5
   124                           
   125                           	psect	dataBANK0
   126  0000C2                     __pdataBANK0:
   127                           	opt stack 0
   128  0000C2                     _sum:
   129                           	opt stack 0
   130  0000C2                     	ds	2
   131                           tblptru	equ	0xFF8
   132                           tblptrh	equ	0xFF7
   133                           tblptrl	equ	0xFF6
   134                           tablat	equ	0xFF5
   135                           
   136                           	psect	cstackBANK0
   137  000080                     __pcstackBANK0:
   138                           	opt stack 0
   139  000080                     main@a:
   140                           	opt stack 0
   141                           
   142                           ; 4 bytes @ 0x0
   143  000080                     	ds	4
   144  000084                     main@a_175:
   145                           	opt stack 0
   146                           
   147                           ; 4 bytes @ 0x4
   148  000084                     	ds	4
   149  000088                     main@a_176:
   150                           	opt stack 0
   151                           
   152                           ; 4 bytes @ 0x8
   153  000088                     	ds	4
   154  00008C                     main@a_177:
   155                           	opt stack 0
   156                           
   157                           ; 4 bytes @ 0xC
   158  00008C                     	ds	4
   159  000090                     main@a_178:
   160                           	opt stack 0
   161                           
   162                           ; 4 bytes @ 0x10
   163  000090                     	ds	4
   164  000094                     main@a_179:
   165                           	opt stack 0
   166                           
   167                           ; 4 bytes @ 0x14
   168  000094                     	ds	4
   169  000098                     main@a_180:
   170                           	opt stack 0
   171                           
   172                           ; 4 bytes @ 0x18
   173  000098                     	ds	4
   174  00009C                     main@a_181:
   175                           	opt stack 0
   176                           
   177                           ; 4 bytes @ 0x1C
   178  00009C                     	ds	4
   179  0000A0                     main@a_182:
   180                           	opt stack 0
   181                           
   182                           ; 4 bytes @ 0x20
   183  0000A0                     	ds	4
   184  0000A4                     main@a_183:
   185                           	opt stack 0
   186                           
   187                           ; 4 bytes @ 0x24
   188  0000A4                     	ds	4
   189  0000A8                     main@a_184:
   190                           	opt stack 0
   191                           
   192                           ; 4 bytes @ 0x28
   193  0000A8                     	ds	4
   194  0000AC                     main@a_185:
   195                           	opt stack 0
   196                           
   197                           ; 4 bytes @ 0x2C
   198  0000AC                     	ds	4
   199  0000B0                     main@a_186:
   200                           	opt stack 0
   201                           
   202                           ; 4 bytes @ 0x30
   203  0000B0                     	ds	4
   204  0000B4                     main@a_187:
   205                           	opt stack 0
   206                           
   207                           ; 4 bytes @ 0x34
   208  0000B4                     	ds	4
   209  0000B8                     main@a_188:
   210                           	opt stack 0
   211                           
   212                           ; 4 bytes @ 0x38
   213  0000B8                     	ds	4
   214  0000BC                     main@a_189:
   215                           	opt stack 0
   216                           
   217                           ; 4 bytes @ 0x3C
   218  0000BC                     	ds	4
   219                           tblptru	equ	0xFF8
   220                           tblptrh	equ	0xFF7
   221                           tblptrl	equ	0xFF6
   222                           tablat	equ	0xFF5
   223                           
   224                           	psect	cstackCOMRAM
   225  000001                     __pcstackCOMRAM:
   226                           	opt stack 0
   227  000001                     ??_high_isr:
   228  000001                     
   229                           ; 1 bytes @ 0x0
   230  000001                     	ds	14
   231  00000F                     ??_low_isr:
   232                           
   233                           ; 1 bytes @ 0xE
   234  00000F                     	ds	17
   235  000020                     ??_main:
   236                           
   237                           ; 1 bytes @ 0x1F
   238  000020                     	ds	1
   239                           tblptru	equ	0xFF8
   240                           tblptrh	equ	0xFF7
   241                           tblptrl	equ	0xFF6
   242                           tablat	equ	0xFF5
   243                           
   244 ;;
   245 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   246 ;;
   247 ;; *************** function _main *****************
   248 ;; Defined at:
   249 ;;		line 42 in file "main.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;  a               4   60[BANK0 ] long 
   254 ;;  a               4   56[BANK0 ] long 
   255 ;;  a               4   52[BANK0 ] long 
   256 ;;  a               4   48[BANK0 ] long 
   257 ;;  a               4   44[BANK0 ] long 
   258 ;;  a               4   40[BANK0 ] long 
   259 ;;  a               4   36[BANK0 ] long 
   260 ;;  a               4   32[BANK0 ] long 
   261 ;;  a               4   28[BANK0 ] long 
   262 ;;  a               4   24[BANK0 ] long 
   263 ;;  a               4   20[BANK0 ] long 
   264 ;;  a               4   16[BANK0 ] long 
   265 ;;  a               4   12[BANK0 ] long 
   266 ;;  a               4    8[BANK0 ] long 
   267 ;;  a               4    4[BANK0 ] long 
   268 ;;  a               4    0[BANK0 ] long 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg, status,2, status,0, cstack
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   278 ;;      Params:         0       0       0       0       0       0       0
   279 ;;      Locals:         0      64       0       0       0       0       0
   280 ;;      Temps:          1       0       0       0       0       0       0
   281 ;;      Totals:         1      64       0       0       0       0       0
   282 ;;Total ram usage:       65 bytes
   283 ;; Hardware stack levels required when called:    3
   284 ;; This function calls:
   285 ;;		_InitApp
   286 ;; This function is called by:
   287 ;;		Startup code after reset
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           	psect	text0
   292  0000AE                     __ptext0:
   293                           	opt stack 0
   294  0000AE                     _main:
   295                           	opt stack 0
   296  0000AE  FFFF               	dw	65535	; assembler added errata NOP
   297                           
   298                           ;main.c: 44: InitApp();
   299                           
   300                           ;incstack = 0
   301  0000B0  EC88  F006         	call	_InitApp	;wreg free
   302  0000B4                     l1145:
   303  0000B4  FFFF               	dw	65535	; assembler added errata NOP
   304                           
   305                           ;main.c: 48: LATB = sum;
   306  0000B6  C0C2  FF8A         	movff	_sum,3978	;volatile
   307                           
   308                           ;main.c: 49: while (PORTCbits.RC4 == 1 && PORTCbits.RC5 == 1) {
   309  0000BA  D17C               	goto	l32
   310  0000BC                     l33:
   311  0000BC  FFFF               	dw	65535	; assembler added errata NOP
   312                           
   313                           ;main.c: 50: __nop();
   314  0000BE  F000               	nop	
   315                           
   316                           ;main.c: 52: comp = PORTA;
   317  0000C0  CF80 F0C0          	movff	3968,_comp	;volatile
   318  0000C4  0100               	movlb	0	; () banked
   319  0000C6  6BC1               	clrf	(_comp+1)& (0+255),b
   320                           
   321                           ; BSR set to: 0
   322                           ;main.c: 53: if (comp > sum) {
   323  0000C8  0100               	movlb	0	; () banked
   324  0000CA  51C0               	movf	_comp& (0+255),w,b
   325  0000CC  0100               	movlb	0	; () banked
   326  0000CE  5DC2               	subwf	_sum& (0+255),w,b
   327  0000D0  0100               	movlb	0	; () banked
   328  0000D2  51C3               	movf	(_sum+1)& (0+255),w,b
   329  0000D4  0A80               	xorlw	128
   330  0000D6  6E20               	movwf	??_main& (0+255),c
   331  0000D8  0100               	movlb	0	; () banked
   332  0000DA  51C1               	movf	(_comp+1)& (0+255),w,b
   333  0000DC  0A80               	xorlw	128
   334  0000DE  5820               	subwfb	??_main& (0+255),w,c
   335  0000E0  B0D8               	btfsc	status,0,c
   336  0000E2  D004               	goto	l1151
   337                           
   338                           ; BSR set to: 0
   339                           ;main.c: 54: LATCbits.LC0 = 1;
   340  0000E4  808B               	bsf	3979,0,c	;volatile
   341                           
   342                           ;main.c: 55: LATCbits.LC1 = 1;
   343  0000E6  828B               	bsf	3979,1,c	;volatile
   344                           
   345                           ;main.c: 56: LATCbits.LC2 = 0;
   346  0000E8  948B               	bcf	3979,2,c	;volatile
   347                           
   348                           ;main.c: 57: LATCbits.LC3 = 0;
   349  0000EA  968B               	bcf	3979,3,c	;volatile
   350  0000EC                     l1151:
   351  0000EC  FFFF               	dw	65535	; assembler added errata NOP
   352                           
   353                           ; BSR set to: 0
   354                           ;main.c: 59: }
   355                           ;main.c: 60: if (sum == 0) {
   356  0000EE  0100               	movlb	0	; () banked
   357  0000F0  51C2               	movf	_sum& (0+255),w,b
   358  0000F2  0100               	movlb	0	; () banked
   359  0000F4  11C3               	iorwf	(_sum+1)& (0+255),w,b
   360  0000F6  A4D8               	btfss	status,2,c
   361  0000F8  D005               	goto	l1155
   362                           
   363                           ; BSR set to: 0
   364                           ;main.c: 61: sum = 32;
   365  0000FA  0E00               	movlw	0
   366  0000FC  0100               	movlb	0	; () banked
   367  0000FE  6FC3               	movwf	(_sum+1)& (0+255),b
   368  000100  0E20               	movlw	32
   369  000102  6FC2               	movwf	_sum& (0+255),b
   370  000104                     l1155:
   371  000104  FFFF               	dw	65535	; assembler added errata NOP
   372                           
   373                           ; BSR set to: 0
   374                           ;main.c: 62: }
   375                           ;main.c: 63: sum = sum - 1;
   376  000106  0EFF               	movlw	255
   377  000108  0100               	movlb	0	; () banked
   378  00010A  25C2               	addwf	_sum& (0+255),w,b
   379  00010C  0100               	movlb	0	; () banked
   380  00010E  6FC2               	movwf	_sum& (0+255),b
   381  000110  0EFF               	movlw	255
   382  000112  0100               	movlb	0	; () banked
   383  000114  21C3               	addwfc	(_sum+1)& (0+255),w,b
   384  000116  0100               	movlb	0	; () banked
   385  000118  6FC3               	movwf	(_sum+1)& (0+255),b
   386                           
   387                           ; BSR set to: 0
   388                           ;main.c: 64: LATB = sum;
   389  00011A  C0C2  FF8A         	movff	_sum,3978	;volatile
   390                           
   391                           ; BSR set to: 0
   392                           ;main.c: 66: for (long a = 1; a < 217392; a++) {
   393  00011E  0E01               	movlw	1
   394  000120  0100               	movlb	0	; () banked
   395  000122  6F80               	movwf	main@a& (0+255),b
   396  000124  0E00               	movlw	0
   397  000126  6F81               	movwf	(main@a+1)& (0+255),b
   398  000128  0E00               	movlw	0
   399  00012A  6F82               	movwf	(main@a+2)& (0+255),b
   400  00012C  0E00               	movlw	0
   401  00012E  6F83               	movwf	(main@a+3)& (0+255),b
   402  000130  0100               	movlb	0	; () banked
   403  000132  BF83               	btfsc	(main@a+3)& (0+255),7,b
   404  000134  D00F               	goto	l36
   405  000136  0100               	movlb	0	; () banked
   406  000138  5183               	movf	(main@a+3)& (0+255),w,b
   407  00013A  E11C               	bnz	l37
   408  00013C  FFFF               	dw	65535	; assembler added errata NOP
   409  00013E  0E30               	movlw	48
   410  000140  0100               	movlb	0	; () banked
   411  000142  5D80               	subwf	main@a& (0+255),w,b
   412  000144  0E51               	movlw	81
   413  000146  0100               	movlb	0	; () banked
   414  000148  5981               	subwfb	(main@a+1)& (0+255),w,b
   415  00014A  0E03               	movlw	3
   416  00014C  0100               	movlb	0	; () banked
   417  00014E  5982               	subwfb	(main@a+2)& (0+255),w,b
   418  000150  B0D8               	btfsc	status,0,c
   419  000152  D010               	goto	l37
   420  000154                     l36:
   421  000154  FFFF               	dw	65535	; assembler added errata NOP
   422                           
   423                           ; BSR set to: 0
   424                           ;main.c: 67: __nop();
   425  000156  F000               	nop	
   426  000158  0E01               	movlw	1
   427  00015A  0100               	movlb	0	; () banked
   428  00015C  2780               	addwf	main@a& (0+255),f,b
   429  00015E  0E00               	movlw	0
   430  000160  2381               	addwfc	(main@a+1)& (0+255),f,b
   431  000162  2382               	addwfc	(main@a+2)& (0+255),f,b
   432  000164  2383               	addwfc	(main@a+3)& (0+255),f,b
   433  000166  0100               	movlb	0	; () banked
   434  000168  BF83               	btfsc	(main@a+3)& (0+255),7,b
   435  00016A  D7F4               	goto	l36
   436  00016C  0100               	movlb	0	; () banked
   437  00016E  5183               	movf	(main@a+3)& (0+255),w,b
   438  000170  E101               	bnz	u1040
   439  000172  D7E4               	goto	L1
   440  000174                     u1040:
   441  000174                     l37:
   442  000174  FFFF               	dw	65535	; assembler added errata NOP
   443                           
   444                           ; BSR set to: 0
   445                           ;main.c: 68: }
   446                           ;main.c: 70: if (PORTCbits.RC4 != 1 || PORTCbits.RC5 != 1) {
   447  000176  B882               	btfsc	3970,4,c	;volatile
   448                           
   449                           ; BSR set to: 0
   450  000178  AA82               	btfss	3970,5,c	;volatile
   451  00017A  D11C               	goto	l32
   452                           
   453                           ; BSR set to: 0
   454                           ;main.c: 72: }
   455                           ;main.c: 75: __nop();
   456                           
   457                           ; BSR set to: 0
   458                           ;main.c: 71: continue;
   459  00017C  F000               	nop	
   460                           
   461                           ;main.c: 76: comp = PORTA;
   462  00017E  CF80 F0C0          	movff	3968,_comp	;volatile
   463  000182  0100               	movlb	0	; () banked
   464  000184  6BC1               	clrf	(_comp+1)& (0+255),b
   465                           
   466                           ; BSR set to: 0
   467                           ;main.c: 77: if (comp > sum) {
   468  000186  0100               	movlb	0	; () banked
   469  000188  51C0               	movf	_comp& (0+255),w,b
   470  00018A  0100               	movlb	0	; () banked
   471  00018C  5DC2               	subwf	_sum& (0+255),w,b
   472  00018E  0100               	movlb	0	; () banked
   473  000190  51C3               	movf	(_sum+1)& (0+255),w,b
   474  000192  0A80               	xorlw	128
   475  000194  6E20               	movwf	??_main& (0+255),c
   476  000196  0100               	movlb	0	; () banked
   477  000198  51C1               	movf	(_comp+1)& (0+255),w,b
   478  00019A  0A80               	xorlw	128
   479  00019C  5820               	subwfb	??_main& (0+255),w,c
   480  00019E  B0D8               	btfsc	status,0,c
   481  0001A0  D04B               	goto	l41
   482                           
   483                           ; BSR set to: 0
   484                           ;main.c: 78: LATCbits.LC0 = 0;
   485  0001A2  908B               	bcf	3979,0,c	;volatile
   486                           
   487                           ;main.c: 79: LATCbits.LC1 = 1;
   488  0001A4  828B               	bsf	3979,1,c	;volatile
   489                           
   490                           ;main.c: 80: LATCbits.LC2 = 1;
   491  0001A6  848B               	bsf	3979,2,c	;volatile
   492                           
   493                           ;main.c: 81: LATCbits.LC3 = 0;
   494  0001A8  968B               	bcf	3979,3,c	;volatile
   495                           
   496                           ; BSR set to: 0
   497                           ;main.c: 82: if (sum == 0) {
   498  0001AA  0100               	movlb	0	; () banked
   499  0001AC  51C2               	movf	_sum& (0+255),w,b
   500  0001AE  0100               	movlb	0	; () banked
   501  0001B0  11C3               	iorwf	(_sum+1)& (0+255),w,b
   502  0001B2  A4D8               	btfss	status,2,c
   503  0001B4  D005               	goto	l1175
   504                           
   505                           ; BSR set to: 0
   506                           ;main.c: 83: sum = 32;
   507  0001B6  0E00               	movlw	0
   508  0001B8  0100               	movlb	0	; () banked
   509  0001BA  6FC3               	movwf	(_sum+1)& (0+255),b
   510  0001BC  0E20               	movlw	32
   511  0001BE  6FC2               	movwf	_sum& (0+255),b
   512  0001C0                     l1175:
   513  0001C0  FFFF               	dw	65535	; assembler added errata NOP
   514                           
   515                           ; BSR set to: 0
   516                           ;main.c: 84: }
   517                           ;main.c: 85: sum = sum - 1;
   518  0001C2  0EFF               	movlw	255
   519  0001C4  0100               	movlb	0	; () banked
   520  0001C6  25C2               	addwf	_sum& (0+255),w,b
   521  0001C8  0100               	movlb	0	; () banked
   522  0001CA  6FC2               	movwf	_sum& (0+255),b
   523  0001CC  0EFF               	movlw	255
   524  0001CE  0100               	movlb	0	; () banked
   525  0001D0  21C3               	addwfc	(_sum+1)& (0+255),w,b
   526  0001D2  0100               	movlb	0	; () banked
   527  0001D4  6FC3               	movwf	(_sum+1)& (0+255),b
   528                           
   529                           ; BSR set to: 0
   530                           ;main.c: 86: LATB = sum;
   531  0001D6  C0C2  FF8A         	movff	_sum,3978	;volatile
   532                           
   533                           ; BSR set to: 0
   534                           ;main.c: 87: for (long a = 1; a < 217392; a++) {
   535  0001DA  0E01               	movlw	1
   536  0001DC  0100               	movlb	0	; () banked
   537  0001DE  6F84               	movwf	main@a_175& (0+255),b
   538  0001E0  0E00               	movlw	0
   539  0001E2  6F85               	movwf	(main@a_175+1)& (0+255),b
   540  0001E4  0E00               	movlw	0
   541  0001E6  6F86               	movwf	(main@a_175+2)& (0+255),b
   542  0001E8  0E00               	movlw	0
   543  0001EA  6F87               	movwf	(main@a_175+3)& (0+255),b
   544  0001EC  0100               	movlb	0	; () banked
   545  0001EE  BF87               	btfsc	(main@a_175+3)& (0+255),7,b
   546  0001F0  D00F               	goto	l43
   547  0001F2  0100               	movlb	0	; () banked
   548  0001F4  5187               	movf	(main@a_175+3)& (0+255),w,b
   549  0001F6  E11C               	bnz	l44
   550  0001F8  FFFF               	dw	65535	; assembler added errata NOP
   551  0001FA  0E30               	movlw	48
   552  0001FC  0100               	movlb	0	; () banked
   553  0001FE  5D84               	subwf	main@a_175& (0+255),w,b
   554  000200  0E51               	movlw	81
   555  000202  0100               	movlb	0	; () banked
   556  000204  5985               	subwfb	(main@a_175+1)& (0+255),w,b
   557  000206  0E03               	movlw	3
   558  000208  0100               	movlb	0	; () banked
   559  00020A  5986               	subwfb	(main@a_175+2)& (0+255),w,b
   560  00020C  B0D8               	btfsc	status,0,c
   561  00020E  D010               	goto	l44
   562  000210                     l43:
   563  000210  FFFF               	dw	65535	; assembler added errata NOP
   564                           
   565                           ; BSR set to: 0
   566                           ;main.c: 88: __nop();
   567  000212  F000               	nop	
   568  000214  0E01               	movlw	1
   569  000216  0100               	movlb	0	; () banked
   570  000218  2784               	addwf	main@a_175& (0+255),f,b
   571  00021A  0E00               	movlw	0
   572  00021C  2385               	addwfc	(main@a_175+1)& (0+255),f,b
   573  00021E  2386               	addwfc	(main@a_175+2)& (0+255),f,b
   574  000220  2387               	addwfc	(main@a_175+3)& (0+255),f,b
   575  000222  0100               	movlb	0	; () banked
   576  000224  BF87               	btfsc	(main@a_175+3)& (0+255),7,b
   577  000226  D7F4               	goto	l43
   578  000228  0100               	movlb	0	; () banked
   579  00022A  5187               	movf	(main@a_175+3)& (0+255),w,b
   580  00022C  E101               	bnz	u1100
   581  00022E  D7E4               	goto	L2
   582  000230                     u1100:
   583  000230                     l44:
   584  000230  FFFF               	dw	65535	; assembler added errata NOP
   585                           
   586                           ; BSR set to: 0
   587                           ;main.c: 89: }
   588                           ;main.c: 91: if (PORTCbits.RC4 != 1 || PORTCbits.RC5 != 1) {
   589  000232  B882               	btfsc	3970,4,c	;volatile
   590                           
   591                           ; BSR set to: 0
   592  000234  AA82               	btfss	3970,5,c	;volatile
   593  000236  D0BE               	goto	l32
   594  000238                     l41:
   595  000238  FFFF               	dw	65535	; assembler added errata NOP
   596                           
   597                           ; BSR set to: 0
   598                           ;main.c: 93: }
   599                           ;main.c: 94: }
   600                           ;main.c: 95: __nop();
   601  00023A  F000               	nop	
   602                           
   603                           ;main.c: 96: comp = PORTA;
   604  00023C  CF80 F0C0          	movff	3968,_comp	;volatile
   605  000240  0100               	movlb	0	; () banked
   606  000242  6BC1               	clrf	(_comp+1)& (0+255),b
   607                           
   608                           ; BSR set to: 0
   609                           ;main.c: 97: if (comp > sum) {
   610  000244  0100               	movlb	0	; () banked
   611  000246  51C0               	movf	_comp& (0+255),w,b
   612  000248  0100               	movlb	0	; () banked
   613  00024A  5DC2               	subwf	_sum& (0+255),w,b
   614  00024C  0100               	movlb	0	; () banked
   615  00024E  51C3               	movf	(_sum+1)& (0+255),w,b
   616  000250  0A80               	xorlw	128
   617  000252  6E20               	movwf	??_main& (0+255),c
   618  000254  0100               	movlb	0	; () banked
   619  000256  51C1               	movf	(_comp+1)& (0+255),w,b
   620  000258  0A80               	xorlw	128
   621  00025A  5820               	subwfb	??_main& (0+255),w,c
   622  00025C  B0D8               	btfsc	status,0,c
   623  00025E  D04B               	goto	l48
   624                           
   625                           ; BSR set to: 0
   626                           ;main.c: 98: LATCbits.LC0 = 0;
   627  000260  908B               	bcf	3979,0,c	;volatile
   628                           
   629                           ;main.c: 99: LATCbits.LC1 = 0;
   630  000262  928B               	bcf	3979,1,c	;volatile
   631                           
   632                           ;main.c: 100: LATCbits.LC2 = 1;
   633  000264  848B               	bsf	3979,2,c	;volatile
   634                           
   635                           ;main.c: 101: LATCbits.LC3 = 1;
   636  000266  868B               	bsf	3979,3,c	;volatile
   637                           
   638                           ; BSR set to: 0
   639                           ;main.c: 102: if (sum == 0) {
   640  000268  0100               	movlb	0	; () banked
   641  00026A  51C2               	movf	_sum& (0+255),w,b
   642  00026C  0100               	movlb	0	; () banked
   643  00026E  11C3               	iorwf	(_sum+1)& (0+255),w,b
   644  000270  A4D8               	btfss	status,2,c
   645  000272  D005               	goto	l1195
   646                           
   647                           ; BSR set to: 0
   648                           ;main.c: 103: sum = 32;
   649  000274  0E00               	movlw	0
   650  000276  0100               	movlb	0	; () banked
   651  000278  6FC3               	movwf	(_sum+1)& (0+255),b
   652  00027A  0E20               	movlw	32
   653  00027C  6FC2               	movwf	_sum& (0+255),b
   654  00027E                     l1195:
   655  00027E  FFFF               	dw	65535	; assembler added errata NOP
   656                           
   657                           ; BSR set to: 0
   658                           ;main.c: 104: }
   659                           ;main.c: 105: sum = sum - 1;
   660  000280  0EFF               	movlw	255
   661  000282  0100               	movlb	0	; () banked
   662  000284  25C2               	addwf	_sum& (0+255),w,b
   663  000286  0100               	movlb	0	; () banked
   664  000288  6FC2               	movwf	_sum& (0+255),b
   665  00028A  0EFF               	movlw	255
   666  00028C  0100               	movlb	0	; () banked
   667  00028E  21C3               	addwfc	(_sum+1)& (0+255),w,b
   668  000290  0100               	movlb	0	; () banked
   669  000292  6FC3               	movwf	(_sum+1)& (0+255),b
   670                           
   671                           ; BSR set to: 0
   672                           ;main.c: 106: LATB = sum;
   673  000294  C0C2  FF8A         	movff	_sum,3978	;volatile
   674                           
   675                           ; BSR set to: 0
   676                           ;main.c: 107: for (long a = 1; a < 217392; a++) {
   677  000298  0E01               	movlw	1
   678  00029A  0100               	movlb	0	; () banked
   679  00029C  6F88               	movwf	main@a_176& (0+255),b
   680  00029E  0E00               	movlw	0
   681  0002A0  6F89               	movwf	(main@a_176+1)& (0+255),b
   682  0002A2  0E00               	movlw	0
   683  0002A4  6F8A               	movwf	(main@a_176+2)& (0+255),b
   684  0002A6  0E00               	movlw	0
   685  0002A8  6F8B               	movwf	(main@a_176+3)& (0+255),b
   686  0002AA  0100               	movlb	0	; () banked
   687  0002AC  BF8B               	btfsc	(main@a_176+3)& (0+255),7,b
   688  0002AE  D00F               	goto	l50
   689  0002B0  0100               	movlb	0	; () banked
   690  0002B2  518B               	movf	(main@a_176+3)& (0+255),w,b
   691  0002B4  E11C               	bnz	l51
   692  0002B6  FFFF               	dw	65535	; assembler added errata NOP
   693  0002B8  0E30               	movlw	48
   694  0002BA  0100               	movlb	0	; () banked
   695  0002BC  5D88               	subwf	main@a_176& (0+255),w,b
   696  0002BE  0E51               	movlw	81
   697  0002C0  0100               	movlb	0	; () banked
   698  0002C2  5989               	subwfb	(main@a_176+1)& (0+255),w,b
   699  0002C4  0E03               	movlw	3
   700  0002C6  0100               	movlb	0	; () banked
   701  0002C8  598A               	subwfb	(main@a_176+2)& (0+255),w,b
   702  0002CA  B0D8               	btfsc	status,0,c
   703  0002CC  D010               	goto	l51
   704  0002CE                     l50:
   705  0002CE  FFFF               	dw	65535	; assembler added errata NOP
   706                           
   707                           ; BSR set to: 0
   708                           ;main.c: 108: __nop();
   709  0002D0  F000               	nop	
   710  0002D2  0E01               	movlw	1
   711  0002D4  0100               	movlb	0	; () banked
   712  0002D6  2788               	addwf	main@a_176& (0+255),f,b
   713  0002D8  0E00               	movlw	0
   714  0002DA  2389               	addwfc	(main@a_176+1)& (0+255),f,b
   715  0002DC  238A               	addwfc	(main@a_176+2)& (0+255),f,b
   716  0002DE  238B               	addwfc	(main@a_176+3)& (0+255),f,b
   717  0002E0  0100               	movlb	0	; () banked
   718  0002E2  BF8B               	btfsc	(main@a_176+3)& (0+255),7,b
   719  0002E4  D7F4               	goto	l50
   720  0002E6  0100               	movlb	0	; () banked
   721  0002E8  518B               	movf	(main@a_176+3)& (0+255),w,b
   722  0002EA  E101               	bnz	u1160
   723  0002EC  D7E4               	goto	L3
   724  0002EE                     u1160:
   725  0002EE                     l51:
   726  0002EE  FFFF               	dw	65535	; assembler added errata NOP
   727                           
   728                           ; BSR set to: 0
   729                           ;main.c: 109: }
   730                           ;main.c: 110: if (PORTCbits.RC4 != 1 || PORTCbits.RC5 != 1) {
   731  0002F0  B882               	btfsc	3970,4,c	;volatile
   732                           
   733                           ; BSR set to: 0
   734  0002F2  AA82               	btfss	3970,5,c	;volatile
   735  0002F4  D05F               	goto	l32
   736  0002F6                     l48:
   737  0002F6  FFFF               	dw	65535	; assembler added errata NOP
   738                           
   739                           ; BSR set to: 0
   740                           ;main.c: 112: }
   741                           ;main.c: 113: }
   742                           ;main.c: 114: comp = PORTA;
   743  0002F8  CF80 F0C0          	movff	3968,_comp	;volatile
   744  0002FC  0100               	movlb	0	; () banked
   745  0002FE  6BC1               	clrf	(_comp+1)& (0+255),b
   746                           
   747                           ; BSR set to: 0
   748                           ;main.c: 115: if (comp > sum) {
   749  000300  0100               	movlb	0	; () banked
   750  000302  51C0               	movf	_comp& (0+255),w,b
   751  000304  0100               	movlb	0	; () banked
   752  000306  5DC2               	subwf	_sum& (0+255),w,b
   753  000308  0100               	movlb	0	; () banked
   754  00030A  51C3               	movf	(_sum+1)& (0+255),w,b
   755  00030C  0A80               	xorlw	128
   756  00030E  6E20               	movwf	??_main& (0+255),c
   757  000310  0100               	movlb	0	; () banked
   758  000312  51C1               	movf	(_comp+1)& (0+255),w,b
   759  000314  0A80               	xorlw	128
   760  000316  5820               	subwfb	??_main& (0+255),w,c
   761  000318  B0D8               	btfsc	status,0,c
   762  00031A  D04C               	goto	l32
   763                           
   764                           ; BSR set to: 0
   765                           ;main.c: 116: LATCbits.LC0 = 1;
   766  00031C  808B               	bsf	3979,0,c	;volatile
   767                           
   768                           ;main.c: 117: LATCbits.LC1 = 0;
   769  00031E  928B               	bcf	3979,1,c	;volatile
   770                           
   771                           ;main.c: 118: LATCbits.LC2 = 0;
   772  000320  948B               	bcf	3979,2,c	;volatile
   773                           
   774                           ;main.c: 119: LATCbits.LC3 = 1;
   775  000322  868B               	bsf	3979,3,c	;volatile
   776                           
   777                           ; BSR set to: 0
   778                           ;main.c: 120: if (sum == 0) {
   779  000324  0100               	movlb	0	; () banked
   780  000326  51C2               	movf	_sum& (0+255),w,b
   781  000328  0100               	movlb	0	; () banked
   782  00032A  11C3               	iorwf	(_sum+1)& (0+255),w,b
   783  00032C  A4D8               	btfss	status,2,c
   784  00032E  D005               	goto	l1215
   785                           
   786                           ; BSR set to: 0
   787                           ;main.c: 121: sum = 32;
   788  000330  0E00               	movlw	0
   789  000332  0100               	movlb	0	; () banked
   790  000334  6FC3               	movwf	(_sum+1)& (0+255),b
   791  000336  0E20               	movlw	32
   792  000338  6FC2               	movwf	_sum& (0+255),b
   793  00033A                     l1215:
   794  00033A  FFFF               	dw	65535	; assembler added errata NOP
   795                           
   796                           ; BSR set to: 0
   797                           ;main.c: 122: }
   798                           ;main.c: 123: sum = sum - 1;
   799  00033C  0EFF               	movlw	255
   800  00033E  0100               	movlb	0	; () banked
   801  000340  25C2               	addwf	_sum& (0+255),w,b
   802  000342  0100               	movlb	0	; () banked
   803  000344  6FC2               	movwf	_sum& (0+255),b
   804  000346  0EFF               	movlw	255
   805  000348  0100               	movlb	0	; () banked
   806  00034A  21C3               	addwfc	(_sum+1)& (0+255),w,b
   807  00034C  0100               	movlb	0	; () banked
   808  00034E  6FC3               	movwf	(_sum+1)& (0+255),b
   809                           
   810                           ; BSR set to: 0
   811                           ;main.c: 124: LATB = sum;
   812  000350  C0C2  FF8A         	movff	_sum,3978	;volatile
   813                           
   814                           ; BSR set to: 0
   815                           ;main.c: 125: for (long a = 1; a < 217392; a++) {
   816  000354  0E01               	movlw	1
   817  000356  0100               	movlb	0	; () banked
   818  000358  6F8C               	movwf	main@a_177& (0+255),b
   819  00035A  0E00               	movlw	0
   820  00035C  6F8D               	movwf	(main@a_177+1)& (0+255),b
   821  00035E  0E00               	movlw	0
   822  000360  6F8E               	movwf	(main@a_177+2)& (0+255),b
   823  000362  0E00               	movlw	0
   824  000364  6F8F               	movwf	(main@a_177+3)& (0+255),b
   825  000366  0100               	movlb	0	; () banked
   826  000368  BF8F               	btfsc	(main@a_177+3)& (0+255),7,b
   827  00036A  D00F               	goto	l57
   828  00036C  0100               	movlb	0	; () banked
   829  00036E  518F               	movf	(main@a_177+3)& (0+255),w,b
   830  000370  E11C               	bnz	l58
   831  000372  FFFF               	dw	65535	; assembler added errata NOP
   832  000374  0E30               	movlw	48
   833  000376  0100               	movlb	0	; () banked
   834  000378  5D8C               	subwf	main@a_177& (0+255),w,b
   835  00037A  0E51               	movlw	81
   836  00037C  0100               	movlb	0	; () banked
   837  00037E  598D               	subwfb	(main@a_177+1)& (0+255),w,b
   838  000380  0E03               	movlw	3
   839  000382  0100               	movlb	0	; () banked
   840  000384  598E               	subwfb	(main@a_177+2)& (0+255),w,b
   841  000386  B0D8               	btfsc	status,0,c
   842  000388  D010               	goto	l58
   843  00038A                     l57:
   844  00038A  FFFF               	dw	65535	; assembler added errata NOP
   845                           
   846                           ; BSR set to: 0
   847                           ;main.c: 126: __nop();
   848  00038C  F000               	nop	
   849  00038E  0E01               	movlw	1
   850  000390  0100               	movlb	0	; () banked
   851  000392  278C               	addwf	main@a_177& (0+255),f,b
   852  000394  0E00               	movlw	0
   853  000396  238D               	addwfc	(main@a_177+1)& (0+255),f,b
   854  000398  238E               	addwfc	(main@a_177+2)& (0+255),f,b
   855  00039A  238F               	addwfc	(main@a_177+3)& (0+255),f,b
   856  00039C  0100               	movlb	0	; () banked
   857  00039E  BF8F               	btfsc	(main@a_177+3)& (0+255),7,b
   858  0003A0  D7F4               	goto	l57
   859  0003A2  0100               	movlb	0	; () banked
   860  0003A4  518F               	movf	(main@a_177+3)& (0+255),w,b
   861  0003A6  E101               	bnz	u1220
   862  0003A8  D7E4               	goto	L4
   863  0003AA                     u1220:
   864  0003AA                     l58:
   865  0003AA  FFFF               	dw	65535	; assembler added errata NOP
   866                           
   867                           ; BSR set to: 0
   868                           ;main.c: 127: }
   869                           ;main.c: 128: if (PORTCbits.RC4 != 1 || PORTCbits.RC5 != 1) {
   870  0003AC  B882               	btfsc	3970,4,c	;volatile
   871                           
   872                           ; BSR set to: 0
   873  0003AE  AA82               	btfss	3970,5,c	;volatile
   874  0003B0  D001               	goto	l32
   875                           
   876                           ; BSR set to: 0
   877                           ;main.c: 130: }
   878                           ;main.c: 131: __nop();
   879                           
   880                           ; BSR set to: 0
   881                           ;main.c: 129: continue;
   882  0003B2  F000               	nop	
   883  0003B4                     l32:
   884  0003B4  FFFF               	dw	65535	; assembler added errata NOP
   885  0003B6  B882               	btfsc	3970,4,c	;volatile
   886  0003B8  AA82               	btfss	3970,5,c	;volatile
   887  0003BA  D2EB               	goto	l65
   888  0003BC  D67F               	goto	l33
   889  0003BE                     l66:
   890  0003BE  FFFF               	dw	65535	; assembler added errata NOP
   891                           
   892                           ;main.c: 137: comp = PORTA;
   893  0003C0  CF80 F0C0          	movff	3968,_comp	;volatile
   894  0003C4  0100               	movlb	0	; () banked
   895  0003C6  6BC1               	clrf	(_comp+1)& (0+255),b
   896                           
   897                           ; BSR set to: 0
   898                           ;main.c: 138: if (comp < sum) {
   899  0003C8  0100               	movlb	0	; () banked
   900  0003CA  51C2               	movf	_sum& (0+255),w,b
   901  0003CC  0100               	movlb	0	; () banked
   902  0003CE  5DC0               	subwf	_comp& (0+255),w,b
   903  0003D0  0100               	movlb	0	; () banked
   904  0003D2  51C1               	movf	(_comp+1)& (0+255),w,b
   905  0003D4  0A80               	xorlw	128
   906  0003D6  6E20               	movwf	??_main& (0+255),c
   907  0003D8  0100               	movlb	0	; () banked
   908  0003DA  51C3               	movf	(_sum+1)& (0+255),w,b
   909  0003DC  0A80               	xorlw	128
   910  0003DE  5820               	subwfb	??_main& (0+255),w,c
   911  0003E0  B0D8               	btfsc	status,0,c
   912  0003E2  D04B               	goto	l67
   913                           
   914                           ; BSR set to: 0
   915                           ;main.c: 139: LATCbits.LC0 = 1;
   916  0003E4  808B               	bsf	3979,0,c	;volatile
   917                           
   918                           ;main.c: 140: LATCbits.LC1 = 0;
   919  0003E6  928B               	bcf	3979,1,c	;volatile
   920                           
   921                           ;main.c: 141: LATCbits.LC2 = 0;
   922  0003E8  948B               	bcf	3979,2,c	;volatile
   923                           
   924                           ;main.c: 142: LATCbits.LC3 = 0;
   925  0003EA  968B               	bcf	3979,3,c	;volatile
   926                           
   927                           ; BSR set to: 0
   928                           ;main.c: 143: if (sum == 0) {
   929  0003EC  0100               	movlb	0	; () banked
   930  0003EE  51C2               	movf	_sum& (0+255),w,b
   931  0003F0  0100               	movlb	0	; () banked
   932  0003F2  11C3               	iorwf	(_sum+1)& (0+255),w,b
   933  0003F4  A4D8               	btfss	status,2,c
   934  0003F6  D005               	goto	l1237
   935                           
   936                           ; BSR set to: 0
   937                           ;main.c: 144: sum = 32;
   938  0003F8  0E00               	movlw	0
   939  0003FA  0100               	movlb	0	; () banked
   940  0003FC  6FC3               	movwf	(_sum+1)& (0+255),b
   941  0003FE  0E20               	movlw	32
   942  000400  6FC2               	movwf	_sum& (0+255),b
   943  000402                     l1237:
   944  000402  FFFF               	dw	65535	; assembler added errata NOP
   945                           
   946                           ; BSR set to: 0
   947                           ;main.c: 145: }
   948                           ;main.c: 146: sum = sum - 1;
   949  000404  0EFF               	movlw	255
   950  000406  0100               	movlb	0	; () banked
   951  000408  25C2               	addwf	_sum& (0+255),w,b
   952  00040A  0100               	movlb	0	; () banked
   953  00040C  6FC2               	movwf	_sum& (0+255),b
   954  00040E  0EFF               	movlw	255
   955  000410  0100               	movlb	0	; () banked
   956  000412  21C3               	addwfc	(_sum+1)& (0+255),w,b
   957  000414  0100               	movlb	0	; () banked
   958  000416  6FC3               	movwf	(_sum+1)& (0+255),b
   959                           
   960                           ; BSR set to: 0
   961                           ;main.c: 147: LATB = sum;
   962  000418  C0C2  FF8A         	movff	_sum,3978	;volatile
   963                           
   964                           ; BSR set to: 0
   965                           ;main.c: 148: for (long a = 1; a < 217392; a++) {
   966  00041C  0E01               	movlw	1
   967  00041E  0100               	movlb	0	; () banked
   968  000420  6F90               	movwf	main@a_178& (0+255),b
   969  000422  0E00               	movlw	0
   970  000424  6F91               	movwf	(main@a_178+1)& (0+255),b
   971  000426  0E00               	movlw	0
   972  000428  6F92               	movwf	(main@a_178+2)& (0+255),b
   973  00042A  0E00               	movlw	0
   974  00042C  6F93               	movwf	(main@a_178+3)& (0+255),b
   975  00042E  0100               	movlb	0	; () banked
   976  000430  BF93               	btfsc	(main@a_178+3)& (0+255),7,b
   977  000432  D00F               	goto	l69
   978  000434  0100               	movlb	0	; () banked
   979  000436  5193               	movf	(main@a_178+3)& (0+255),w,b
   980  000438  E11C               	bnz	l70
   981  00043A  FFFF               	dw	65535	; assembler added errata NOP
   982  00043C  0E30               	movlw	48
   983  00043E  0100               	movlb	0	; () banked
   984  000440  5D90               	subwf	main@a_178& (0+255),w,b
   985  000442  0E51               	movlw	81
   986  000444  0100               	movlb	0	; () banked
   987  000446  5991               	subwfb	(main@a_178+1)& (0+255),w,b
   988  000448  0E03               	movlw	3
   989  00044A  0100               	movlb	0	; () banked
   990  00044C  5992               	subwfb	(main@a_178+2)& (0+255),w,b
   991  00044E  B0D8               	btfsc	status,0,c
   992  000450  D010               	goto	l70
   993  000452                     l69:
   994  000452  FFFF               	dw	65535	; assembler added errata NOP
   995                           
   996                           ; BSR set to: 0
   997                           ;main.c: 149: __nop();
   998  000454  F000               	nop	
   999  000456  0E01               	movlw	1
  1000  000458  0100               	movlb	0	; () banked
  1001  00045A  2790               	addwf	main@a_178& (0+255),f,b
  1002  00045C  0E00               	movlw	0
  1003  00045E  2391               	addwfc	(main@a_178+1)& (0+255),f,b
  1004  000460  2392               	addwfc	(main@a_178+2)& (0+255),f,b
  1005  000462  2393               	addwfc	(main@a_178+3)& (0+255),f,b
  1006  000464  0100               	movlb	0	; () banked
  1007  000466  BF93               	btfsc	(main@a_178+3)& (0+255),7,b
  1008  000468  D7F4               	goto	l69
  1009  00046A  0100               	movlb	0	; () banked
  1010  00046C  5193               	movf	(main@a_178+3)& (0+255),w,b
  1011  00046E  E101               	bnz	u1300
  1012  000470  D7E4               	goto	L5
  1013  000472                     u1300:
  1014  000472                     l70:
  1015  000472  FFFF               	dw	65535	; assembler added errata NOP
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;main.c: 150: }
  1019                           ;main.c: 151: if (PORTCbits.RC4 != 1 || PORTCbits.RC5 != 0) {
  1020  000474  B882               	btfsc	3970,4,c	;volatile
  1021                           
  1022                           ; BSR set to: 0
  1023  000476  BA82               	btfsc	3970,5,c	;volatile
  1024  000478  D28C               	goto	l65
  1025  00047A                     l67:
  1026  00047A  FFFF               	dw	65535	; assembler added errata NOP
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;main.c: 153: }
  1030                           ;main.c: 154: }
  1031                           ;main.c: 155: comp = PORTA;
  1032  00047C  CF80 F0C0          	movff	3968,_comp	;volatile
  1033  000480  0100               	movlb	0	; () banked
  1034  000482  6BC1               	clrf	(_comp+1)& (0+255),b
  1035                           
  1036                           ;main.c: 156: __nop();
  1037  000484  F000               	nop	
  1038                           
  1039                           ;main.c: 157: if (comp != sum) {
  1040  000486  0100               	movlb	0	; () banked
  1041  000488  51C2               	movf	_sum& (0+255),w,b
  1042  00048A  0100               	movlb	0	; () banked
  1043  00048C  19C0               	xorwf	_comp& (0+255),w,b
  1044  00048E  E106               	bnz	u1330
  1045  000490  0100               	movlb	0	; () banked
  1046  000492  51C3               	movf	(_sum+1)& (0+255),w,b
  1047  000494  0100               	movlb	0	; () banked
  1048  000496  19C1               	xorwf	(_comp+1)& (0+255),w,b
  1049  000498  B4D8               	btfsc	status,2,c
  1050  00049A  D04B               	goto	l74
  1051  00049C                     u1330:
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;main.c: 158: LATCbits.LC0 = 1;
  1055  00049C  808B               	bsf	3979,0,c	;volatile
  1056                           
  1057                           ;main.c: 159: LATCbits.LC1 = 1;
  1058  00049E  828B               	bsf	3979,1,c	;volatile
  1059                           
  1060                           ;main.c: 160: LATCbits.LC2 = 0;
  1061  0004A0  948B               	bcf	3979,2,c	;volatile
  1062                           
  1063                           ;main.c: 161: LATCbits.LC3 = 0;
  1064  0004A2  968B               	bcf	3979,3,c	;volatile
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;main.c: 162: if (sum == 0) {
  1068  0004A4  0100               	movlb	0	; () banked
  1069  0004A6  51C2               	movf	_sum& (0+255),w,b
  1070  0004A8  0100               	movlb	0	; () banked
  1071  0004AA  11C3               	iorwf	(_sum+1)& (0+255),w,b
  1072  0004AC  A4D8               	btfss	status,2,c
  1073  0004AE  D005               	goto	l1257
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;main.c: 163: sum = 32;
  1077  0004B0  0E00               	movlw	0
  1078  0004B2  0100               	movlb	0	; () banked
  1079  0004B4  6FC3               	movwf	(_sum+1)& (0+255),b
  1080  0004B6  0E20               	movlw	32
  1081  0004B8  6FC2               	movwf	_sum& (0+255),b
  1082  0004BA                     l1257:
  1083  0004BA  FFFF               	dw	65535	; assembler added errata NOP
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 164: }
  1087                           ;main.c: 165: sum = sum - 1;
  1088  0004BC  0EFF               	movlw	255
  1089  0004BE  0100               	movlb	0	; () banked
  1090  0004C0  25C2               	addwf	_sum& (0+255),w,b
  1091  0004C2  0100               	movlb	0	; () banked
  1092  0004C4  6FC2               	movwf	_sum& (0+255),b
  1093  0004C6  0EFF               	movlw	255
  1094  0004C8  0100               	movlb	0	; () banked
  1095  0004CA  21C3               	addwfc	(_sum+1)& (0+255),w,b
  1096  0004CC  0100               	movlb	0	; () banked
  1097  0004CE  6FC3               	movwf	(_sum+1)& (0+255),b
  1098                           
  1099                           ; BSR set to: 0
  1100                           ;main.c: 166: LATB = sum;
  1101  0004D0  C0C2  FF8A         	movff	_sum,3978	;volatile
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;main.c: 167: for (long a = 1; a < 217392; a++) {
  1105  0004D4  0E01               	movlw	1
  1106  0004D6  0100               	movlb	0	; () banked
  1107  0004D8  6F94               	movwf	main@a_179& (0+255),b
  1108  0004DA  0E00               	movlw	0
  1109  0004DC  6F95               	movwf	(main@a_179+1)& (0+255),b
  1110  0004DE  0E00               	movlw	0
  1111  0004E0  6F96               	movwf	(main@a_179+2)& (0+255),b
  1112  0004E2  0E00               	movlw	0
  1113  0004E4  6F97               	movwf	(main@a_179+3)& (0+255),b
  1114  0004E6  0100               	movlb	0	; () banked
  1115  0004E8  BF97               	btfsc	(main@a_179+3)& (0+255),7,b
  1116  0004EA  D00F               	goto	l76
  1117  0004EC  0100               	movlb	0	; () banked
  1118  0004EE  5197               	movf	(main@a_179+3)& (0+255),w,b
  1119  0004F0  E11C               	bnz	l77
  1120  0004F2  FFFF               	dw	65535	; assembler added errata NOP
  1121  0004F4  0E30               	movlw	48
  1122  0004F6  0100               	movlb	0	; () banked
  1123  0004F8  5D94               	subwf	main@a_179& (0+255),w,b
  1124  0004FA  0E51               	movlw	81
  1125  0004FC  0100               	movlb	0	; () banked
  1126  0004FE  5995               	subwfb	(main@a_179+1)& (0+255),w,b
  1127  000500  0E03               	movlw	3
  1128  000502  0100               	movlb	0	; () banked
  1129  000504  5996               	subwfb	(main@a_179+2)& (0+255),w,b
  1130  000506  B0D8               	btfsc	status,0,c
  1131  000508  D010               	goto	l77
  1132  00050A                     l76:
  1133  00050A  FFFF               	dw	65535	; assembler added errata NOP
  1134                           
  1135                           ; BSR set to: 0
  1136                           ;main.c: 168: __nop();
  1137  00050C  F000               	nop	
  1138  00050E  0E01               	movlw	1
  1139  000510  0100               	movlb	0	; () banked
  1140  000512  2794               	addwf	main@a_179& (0+255),f,b
  1141  000514  0E00               	movlw	0
  1142  000516  2395               	addwfc	(main@a_179+1)& (0+255),f,b
  1143  000518  2396               	addwfc	(main@a_179+2)& (0+255),f,b
  1144  00051A  2397               	addwfc	(main@a_179+3)& (0+255),f,b
  1145  00051C  0100               	movlb	0	; () banked
  1146  00051E  BF97               	btfsc	(main@a_179+3)& (0+255),7,b
  1147  000520  D7F4               	goto	l76
  1148  000522  0100               	movlb	0	; () banked
  1149  000524  5197               	movf	(main@a_179+3)& (0+255),w,b
  1150  000526  E101               	bnz	u1360
  1151  000528  D7E4               	goto	L6
  1152  00052A                     u1360:
  1153  00052A                     l77:
  1154  00052A  FFFF               	dw	65535	; assembler added errata NOP
  1155                           
  1156                           ; BSR set to: 0
  1157                           ;main.c: 169: }
  1158                           ;main.c: 170: if (PORTCbits.RC4 != 1 || PORTCbits.RC5 != 0) {
  1159  00052C  B882               	btfsc	3970,4,c	;volatile
  1160                           
  1161                           ; BSR set to: 0
  1162  00052E  BA82               	btfsc	3970,5,c	;volatile
  1163  000530  D230               	goto	l65
  1164  000532                     l74:
  1165  000532  FFFF               	dw	65535	; assembler added errata NOP
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;main.c: 172: }
  1169                           ;main.c: 173: }
  1170                           ;main.c: 174: comp = PORTA;
  1171  000534  CF80 F0C0          	movff	3968,_comp	;volatile
  1172  000538  0100               	movlb	0	; () banked
  1173  00053A  6BC1               	clrf	(_comp+1)& (0+255),b
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;main.c: 175: if (comp != sum) {
  1177  00053C  0100               	movlb	0	; () banked
  1178  00053E  51C2               	movf	_sum& (0+255),w,b
  1179  000540  0100               	movlb	0	; () banked
  1180  000542  19C0               	xorwf	_comp& (0+255),w,b
  1181  000544  E106               	bnz	u1390
  1182  000546  0100               	movlb	0	; () banked
  1183  000548  51C3               	movf	(_sum+1)& (0+255),w,b
  1184  00054A  0100               	movlb	0	; () banked
  1185  00054C  19C1               	xorwf	(_comp+1)& (0+255),w,b
  1186  00054E  B4D8               	btfsc	status,2,c
  1187  000550  D04B               	goto	l81
  1188  000552                     u1390:
  1189                           
  1190                           ; BSR set to: 0
  1191                           ;main.c: 176: LATCbits.LC0 = 0;
  1192  000552  908B               	bcf	3979,0,c	;volatile
  1193                           
  1194                           ;main.c: 177: LATCbits.LC1 = 1;
  1195  000554  828B               	bsf	3979,1,c	;volatile
  1196                           
  1197                           ;main.c: 178: LATCbits.LC2 = 0;
  1198  000556  948B               	bcf	3979,2,c	;volatile
  1199                           
  1200                           ;main.c: 179: LATCbits.LC3 = 0;
  1201  000558  968B               	bcf	3979,3,c	;volatile
  1202                           
  1203                           ; BSR set to: 0
  1204                           ;main.c: 180: if (sum == 0) {
  1205  00055A  0100               	movlb	0	; () banked
  1206  00055C  51C2               	movf	_sum& (0+255),w,b
  1207  00055E  0100               	movlb	0	; () banked
  1208  000560  11C3               	iorwf	(_sum+1)& (0+255),w,b
  1209  000562  A4D8               	btfss	status,2,c
  1210  000564  D005               	goto	l1277
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;main.c: 181: sum = 32;
  1214  000566  0E00               	movlw	0
  1215  000568  0100               	movlb	0	; () banked
  1216  00056A  6FC3               	movwf	(_sum+1)& (0+255),b
  1217  00056C  0E20               	movlw	32
  1218  00056E  6FC2               	movwf	_sum& (0+255),b
  1219  000570                     l1277:
  1220  000570  FFFF               	dw	65535	; assembler added errata NOP
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;main.c: 182: }
  1224                           ;main.c: 183: sum = sum - 1;
  1225  000572  0EFF               	movlw	255
  1226  000574  0100               	movlb	0	; () banked
  1227  000576  25C2               	addwf	_sum& (0+255),w,b
  1228  000578  0100               	movlb	0	; () banked
  1229  00057A  6FC2               	movwf	_sum& (0+255),b
  1230  00057C  0EFF               	movlw	255
  1231  00057E  0100               	movlb	0	; () banked
  1232  000580  21C3               	addwfc	(_sum+1)& (0+255),w,b
  1233  000582  0100               	movlb	0	; () banked
  1234  000584  6FC3               	movwf	(_sum+1)& (0+255),b
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;main.c: 184: LATB = sum;
  1238  000586  C0C2  FF8A         	movff	_sum,3978	;volatile
  1239                           
  1240                           ; BSR set to: 0
  1241                           ;main.c: 185: for (long a = 1; a < 217392; a++) {
  1242  00058A  0E01               	movlw	1
  1243  00058C  0100               	movlb	0	; () banked
  1244  00058E  6F98               	movwf	main@a_180& (0+255),b
  1245  000590  0E00               	movlw	0
  1246  000592  6F99               	movwf	(main@a_180+1)& (0+255),b
  1247  000594  0E00               	movlw	0
  1248  000596  6F9A               	movwf	(main@a_180+2)& (0+255),b
  1249  000598  0E00               	movlw	0
  1250  00059A  6F9B               	movwf	(main@a_180+3)& (0+255),b
  1251  00059C  0100               	movlb	0	; () banked
  1252  00059E  BF9B               	btfsc	(main@a_180+3)& (0+255),7,b
  1253  0005A0  D00F               	goto	l83
  1254  0005A2  0100               	movlb	0	; () banked
  1255  0005A4  519B               	movf	(main@a_180+3)& (0+255),w,b
  1256  0005A6  E11C               	bnz	l84
  1257  0005A8  FFFF               	dw	65535	; assembler added errata NOP
  1258  0005AA  0E30               	movlw	48
  1259  0005AC  0100               	movlb	0	; () banked
  1260  0005AE  5D98               	subwf	main@a_180& (0+255),w,b
  1261  0005B0  0E51               	movlw	81
  1262  0005B2  0100               	movlb	0	; () banked
  1263  0005B4  5999               	subwfb	(main@a_180+1)& (0+255),w,b
  1264  0005B6  0E03               	movlw	3
  1265  0005B8  0100               	movlb	0	; () banked
  1266  0005BA  599A               	subwfb	(main@a_180+2)& (0+255),w,b
  1267  0005BC  B0D8               	btfsc	status,0,c
  1268  0005BE  D010               	goto	l84
  1269  0005C0                     l83:
  1270  0005C0  FFFF               	dw	65535	; assembler added errata NOP
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;main.c: 186: __nop();
  1274  0005C2  F000               	nop	
  1275  0005C4  0E01               	movlw	1
  1276  0005C6  0100               	movlb	0	; () banked
  1277  0005C8  2798               	addwf	main@a_180& (0+255),f,b
  1278  0005CA  0E00               	movlw	0
  1279  0005CC  2399               	addwfc	(main@a_180+1)& (0+255),f,b
  1280  0005CE  239A               	addwfc	(main@a_180+2)& (0+255),f,b
  1281  0005D0  239B               	addwfc	(main@a_180+3)& (0+255),f,b
  1282  0005D2  0100               	movlb	0	; () banked
  1283  0005D4  BF9B               	btfsc	(main@a_180+3)& (0+255),7,b
  1284  0005D6  D7F4               	goto	l83
  1285  0005D8  0100               	movlb	0	; () banked
  1286  0005DA  519B               	movf	(main@a_180+3)& (0+255),w,b
  1287  0005DC  E101               	bnz	u1420
  1288  0005DE  D7E4               	goto	L7
  1289  0005E0                     u1420:
  1290  0005E0                     l84:
  1291  0005E0  FFFF               	dw	65535	; assembler added errata NOP
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;main.c: 187: }
  1295                           ;main.c: 189: if (PORTCbits.RC4 != 1 || PORTCbits.RC5 != 0) {
  1296  0005E2  B882               	btfsc	3970,4,c	;volatile
  1297                           
  1298                           ; BSR set to: 0
  1299  0005E4  BA82               	btfsc	3970,5,c	;volatile
  1300  0005E6  D1D5               	goto	l65
  1301  0005E8                     l81:
  1302  0005E8  FFFF               	dw	65535	; assembler added errata NOP
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;main.c: 191: }
  1306                           ;main.c: 192: }
  1307                           ;main.c: 193: comp = PORTA;
  1308  0005EA  CF80 F0C0          	movff	3968,_comp	;volatile
  1309  0005EE  0100               	movlb	0	; () banked
  1310  0005F0  6BC1               	clrf	(_comp+1)& (0+255),b
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;main.c: 194: if (comp < sum) {
  1314  0005F2  0100               	movlb	0	; () banked
  1315  0005F4  51C2               	movf	_sum& (0+255),w,b
  1316  0005F6  0100               	movlb	0	; () banked
  1317  0005F8  5DC0               	subwf	_comp& (0+255),w,b
  1318  0005FA  0100               	movlb	0	; () banked
  1319  0005FC  51C1               	movf	(_comp+1)& (0+255),w,b
  1320  0005FE  0A80               	xorlw	128
  1321  000600  6E20               	movwf	??_main& (0+255),c
  1322  000602  0100               	movlb	0	; () banked
  1323  000604  51C3               	movf	(_sum+1)& (0+255),w,b
  1324  000606  0A80               	xorlw	128
  1325  000608  5820               	subwfb	??_main& (0+255),w,c
  1326  00060A  B0D8               	btfsc	status,0,c
  1327  00060C  D04B               	goto	l88
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;main.c: 195: LATCbits.LC0 = 0;
  1331  00060E  908B               	bcf	3979,0,c	;volatile
  1332                           
  1333                           ;main.c: 196: LATCbits.LC1 = 1;
  1334  000610  828B               	bsf	3979,1,c	;volatile
  1335                           
  1336                           ;main.c: 197: LATCbits.LC2 = 1;
  1337  000612  848B               	bsf	3979,2,c	;volatile
  1338                           
  1339                           ;main.c: 198: LATCbits.LC3 = 0;
  1340  000614  968B               	bcf	3979,3,c	;volatile
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;main.c: 199: if (sum == 0) {
  1344  000616  0100               	movlb	0	; () banked
  1345  000618  51C2               	movf	_sum& (0+255),w,b
  1346  00061A  0100               	movlb	0	; () banked
  1347  00061C  11C3               	iorwf	(_sum+1)& (0+255),w,b
  1348  00061E  A4D8               	btfss	status,2,c
  1349  000620  D005               	goto	l1297
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;main.c: 200: sum = 32;
  1353  000622  0E00               	movlw	0
  1354  000624  0100               	movlb	0	; () banked
  1355  000626  6FC3               	movwf	(_sum+1)& (0+255),b
  1356  000628  0E20               	movlw	32
  1357  00062A  6FC2               	movwf	_sum& (0+255),b
  1358  00062C                     l1297:
  1359  00062C  FFFF               	dw	65535	; assembler added errata NOP
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;main.c: 201: }
  1363                           ;main.c: 202: sum = sum - 1;
  1364  00062E  0EFF               	movlw	255
  1365  000630  0100               	movlb	0	; () banked
  1366  000632  25C2               	addwf	_sum& (0+255),w,b
  1367  000634  0100               	movlb	0	; () banked
  1368  000636  6FC2               	movwf	_sum& (0+255),b
  1369  000638  0EFF               	movlw	255
  1370  00063A  0100               	movlb	0	; () banked
  1371  00063C  21C3               	addwfc	(_sum+1)& (0+255),w,b
  1372  00063E  0100               	movlb	0	; () banked
  1373  000640  6FC3               	movwf	(_sum+1)& (0+255),b
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;main.c: 203: LATB = sum;
  1377  000642  C0C2  FF8A         	movff	_sum,3978	;volatile
  1378                           
  1379                           ; BSR set to: 0
  1380                           ;main.c: 204: for (long a = 1; a < 217392; a++) {
  1381  000646  0E01               	movlw	1
  1382  000648  0100               	movlb	0	; () banked
  1383  00064A  6F9C               	movwf	main@a_181& (0+255),b
  1384  00064C  0E00               	movlw	0
  1385  00064E  6F9D               	movwf	(main@a_181+1)& (0+255),b
  1386  000650  0E00               	movlw	0
  1387  000652  6F9E               	movwf	(main@a_181+2)& (0+255),b
  1388  000654  0E00               	movlw	0
  1389  000656  6F9F               	movwf	(main@a_181+3)& (0+255),b
  1390  000658  0100               	movlb	0	; () banked
  1391  00065A  BF9F               	btfsc	(main@a_181+3)& (0+255),7,b
  1392  00065C  D00F               	goto	l90
  1393  00065E  0100               	movlb	0	; () banked
  1394  000660  519F               	movf	(main@a_181+3)& (0+255),w,b
  1395  000662  E11C               	bnz	l91
  1396  000664  FFFF               	dw	65535	; assembler added errata NOP
  1397  000666  0E30               	movlw	48
  1398  000668  0100               	movlb	0	; () banked
  1399  00066A  5D9C               	subwf	main@a_181& (0+255),w,b
  1400  00066C  0E51               	movlw	81
  1401  00066E  0100               	movlb	0	; () banked
  1402  000670  599D               	subwfb	(main@a_181+1)& (0+255),w,b
  1403  000672  0E03               	movlw	3
  1404  000674  0100               	movlb	0	; () banked
  1405  000676  599E               	subwfb	(main@a_181+2)& (0+255),w,b
  1406  000678  B0D8               	btfsc	status,0,c
  1407  00067A  D010               	goto	l91
  1408  00067C                     l90:
  1409  00067C  FFFF               	dw	65535	; assembler added errata NOP
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;main.c: 205: __nop();
  1413  00067E  F000               	nop	
  1414  000680  0E01               	movlw	1
  1415  000682  0100               	movlb	0	; () banked
  1416  000684  279C               	addwf	main@a_181& (0+255),f,b
  1417  000686  0E00               	movlw	0
  1418  000688  239D               	addwfc	(main@a_181+1)& (0+255),f,b
  1419  00068A  239E               	addwfc	(main@a_181+2)& (0+255),f,b
  1420  00068C  239F               	addwfc	(main@a_181+3)& (0+255),f,b
  1421  00068E  0100               	movlb	0	; () banked
  1422  000690  BF9F               	btfsc	(main@a_181+3)& (0+255),7,b
  1423  000692  D7F4               	goto	l90
  1424  000694  0100               	movlb	0	; () banked
  1425  000696  519F               	movf	(main@a_181+3)& (0+255),w,b
  1426  000698  E101               	bnz	u1480
  1427  00069A  D7E4               	goto	L8
  1428  00069C                     u1480:
  1429  00069C                     l91:
  1430  00069C  FFFF               	dw	65535	; assembler added errata NOP
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;main.c: 206: }
  1434                           ;main.c: 207: if (PORTCbits.RC4 != 1 || PORTCbits.RC5 != 0) {
  1435  00069E  B882               	btfsc	3970,4,c	;volatile
  1436                           
  1437                           ; BSR set to: 0
  1438  0006A0  BA82               	btfsc	3970,5,c	;volatile
  1439  0006A2  D177               	goto	l65
  1440  0006A4                     l88:
  1441  0006A4  FFFF               	dw	65535	; assembler added errata NOP
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;main.c: 209: }
  1445                           ;main.c: 210: }
  1446                           ;main.c: 211: comp = PORTA;
  1447  0006A6  CF80 F0C0          	movff	3968,_comp	;volatile
  1448  0006AA  0100               	movlb	0	; () banked
  1449  0006AC  6BC1               	clrf	(_comp+1)& (0+255),b
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;main.c: 212: if (comp < sum) {
  1453  0006AE  0100               	movlb	0	; () banked
  1454  0006B0  51C2               	movf	_sum& (0+255),w,b
  1455  0006B2  0100               	movlb	0	; () banked
  1456  0006B4  5DC0               	subwf	_comp& (0+255),w,b
  1457  0006B6  0100               	movlb	0	; () banked
  1458  0006B8  51C1               	movf	(_comp+1)& (0+255),w,b
  1459  0006BA  0A80               	xorlw	128
  1460  0006BC  6E20               	movwf	??_main& (0+255),c
  1461  0006BE  0100               	movlb	0	; () banked
  1462  0006C0  51C3               	movf	(_sum+1)& (0+255),w,b
  1463  0006C2  0A80               	xorlw	128
  1464  0006C4  5820               	subwfb	??_main& (0+255),w,c
  1465  0006C6  B0D8               	btfsc	status,0,c
  1466  0006C8  D04B               	goto	l95
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;main.c: 213: LATCbits.LC0 = 0;
  1470  0006CA  908B               	bcf	3979,0,c	;volatile
  1471                           
  1472                           ;main.c: 214: LATCbits.LC1 = 0;
  1473  0006CC  928B               	bcf	3979,1,c	;volatile
  1474                           
  1475                           ;main.c: 215: LATCbits.LC2 = 1;
  1476  0006CE  848B               	bsf	3979,2,c	;volatile
  1477                           
  1478                           ;main.c: 216: LATCbits.LC3 = 0;
  1479  0006D0  968B               	bcf	3979,3,c	;volatile
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;main.c: 217: if (sum == 0) {
  1483  0006D2  0100               	movlb	0	; () banked
  1484  0006D4  51C2               	movf	_sum& (0+255),w,b
  1485  0006D6  0100               	movlb	0	; () banked
  1486  0006D8  11C3               	iorwf	(_sum+1)& (0+255),w,b
  1487  0006DA  A4D8               	btfss	status,2,c
  1488  0006DC  D005               	goto	l1317
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;main.c: 218: sum = 32;
  1492  0006DE  0E00               	movlw	0
  1493  0006E0  0100               	movlb	0	; () banked
  1494  0006E2  6FC3               	movwf	(_sum+1)& (0+255),b
  1495  0006E4  0E20               	movlw	32
  1496  0006E6  6FC2               	movwf	_sum& (0+255),b
  1497  0006E8                     l1317:
  1498  0006E8  FFFF               	dw	65535	; assembler added errata NOP
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;main.c: 219: }
  1502                           ;main.c: 220: sum = sum - 1;
  1503  0006EA  0EFF               	movlw	255
  1504  0006EC  0100               	movlb	0	; () banked
  1505  0006EE  25C2               	addwf	_sum& (0+255),w,b
  1506  0006F0  0100               	movlb	0	; () banked
  1507  0006F2  6FC2               	movwf	_sum& (0+255),b
  1508  0006F4  0EFF               	movlw	255
  1509  0006F6  0100               	movlb	0	; () banked
  1510  0006F8  21C3               	addwfc	(_sum+1)& (0+255),w,b
  1511  0006FA  0100               	movlb	0	; () banked
  1512  0006FC  6FC3               	movwf	(_sum+1)& (0+255),b
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;main.c: 221: LATB = sum;
  1516  0006FE  C0C2  FF8A         	movff	_sum,3978	;volatile
  1517                           
  1518                           ; BSR set to: 0
  1519                           ;main.c: 222: for (long a = 1; a < 217392; a++) {
  1520  000702  0E01               	movlw	1
  1521  000704  0100               	movlb	0	; () banked
  1522  000706  6FA0               	movwf	main@a_182& (0+255),b
  1523  000708  0E00               	movlw	0
  1524  00070A  6FA1               	movwf	(main@a_182+1)& (0+255),b
  1525  00070C  0E00               	movlw	0
  1526  00070E  6FA2               	movwf	(main@a_182+2)& (0+255),b
  1527  000710  0E00               	movlw	0
  1528  000712  6FA3               	movwf	(main@a_182+3)& (0+255),b
  1529  000714  0100               	movlb	0	; () banked
  1530  000716  BFA3               	btfsc	(main@a_182+3)& (0+255),7,b
  1531  000718  D00F               	goto	l97
  1532  00071A  0100               	movlb	0	; () banked
  1533  00071C  51A3               	movf	(main@a_182+3)& (0+255),w,b
  1534  00071E  E11C               	bnz	l98
  1535  000720  FFFF               	dw	65535	; assembler added errata NOP
  1536  000722  0E30               	movlw	48
  1537  000724  0100               	movlb	0	; () banked
  1538  000726  5DA0               	subwf	main@a_182& (0+255),w,b
  1539  000728  0E51               	movlw	81
  1540  00072A  0100               	movlb	0	; () banked
  1541  00072C  59A1               	subwfb	(main@a_182+1)& (0+255),w,b
  1542  00072E  0E03               	movlw	3
  1543  000730  0100               	movlb	0	; () banked
  1544  000732  59A2               	subwfb	(main@a_182+2)& (0+255),w,b
  1545  000734  B0D8               	btfsc	status,0,c
  1546  000736  D010               	goto	l98
  1547  000738                     l97:
  1548  000738  FFFF               	dw	65535	; assembler added errata NOP
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;main.c: 223: __nop();
  1552  00073A  F000               	nop	
  1553  00073C  0E01               	movlw	1
  1554  00073E  0100               	movlb	0	; () banked
  1555  000740  27A0               	addwf	main@a_182& (0+255),f,b
  1556  000742  0E00               	movlw	0
  1557  000744  23A1               	addwfc	(main@a_182+1)& (0+255),f,b
  1558  000746  23A2               	addwfc	(main@a_182+2)& (0+255),f,b
  1559  000748  23A3               	addwfc	(main@a_182+3)& (0+255),f,b
  1560  00074A  0100               	movlb	0	; () banked
  1561  00074C  BFA3               	btfsc	(main@a_182+3)& (0+255),7,b
  1562  00074E  D7F4               	goto	l97
  1563  000750  0100               	movlb	0	; () banked
  1564  000752  51A3               	movf	(main@a_182+3)& (0+255),w,b
  1565  000754  E101               	bnz	u1540
  1566  000756  D7E4               	goto	L9
  1567  000758                     u1540:
  1568  000758                     l98:
  1569  000758  FFFF               	dw	65535	; assembler added errata NOP
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;main.c: 224: }
  1573                           ;main.c: 225: if (PORTCbits.RC4 != 1 || PORTCbits.RC5 != 0) {
  1574  00075A  B882               	btfsc	3970,4,c	;volatile
  1575                           
  1576                           ; BSR set to: 0
  1577  00075C  BA82               	btfsc	3970,5,c	;volatile
  1578  00075E  D119               	goto	l65
  1579  000760                     l95:
  1580  000760  FFFF               	dw	65535	; assembler added errata NOP
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;main.c: 227: }
  1584                           ;main.c: 228: }
  1585                           ;main.c: 229: comp = PORTA;
  1586  000762  CF80 F0C0          	movff	3968,_comp	;volatile
  1587  000766  0100               	movlb	0	; () banked
  1588  000768  6BC1               	clrf	(_comp+1)& (0+255),b
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;main.c: 230: if (comp < sum) {
  1592  00076A  0100               	movlb	0	; () banked
  1593  00076C  51C2               	movf	_sum& (0+255),w,b
  1594  00076E  0100               	movlb	0	; () banked
  1595  000770  5DC0               	subwf	_comp& (0+255),w,b
  1596  000772  0100               	movlb	0	; () banked
  1597  000774  51C1               	movf	(_comp+1)& (0+255),w,b
  1598  000776  0A80               	xorlw	128
  1599  000778  6E20               	movwf	??_main& (0+255),c
  1600  00077A  0100               	movlb	0	; () banked
  1601  00077C  51C3               	movf	(_sum+1)& (0+255),w,b
  1602  00077E  0A80               	xorlw	128
  1603  000780  5820               	subwfb	??_main& (0+255),w,c
  1604  000782  B0D8               	btfsc	status,0,c
  1605  000784  D04B               	goto	l102
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;main.c: 231: LATCbits.LC0 = 0;
  1609  000786  908B               	bcf	3979,0,c	;volatile
  1610                           
  1611                           ;main.c: 232: LATCbits.LC1 = 0;
  1612  000788  928B               	bcf	3979,1,c	;volatile
  1613                           
  1614                           ;main.c: 233: LATCbits.LC2 = 1;
  1615  00078A  848B               	bsf	3979,2,c	;volatile
  1616                           
  1617                           ;main.c: 234: LATCbits.LC3 = 1;
  1618  00078C  868B               	bsf	3979,3,c	;volatile
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;main.c: 235: if (sum == 0) {
  1622  00078E  0100               	movlb	0	; () banked
  1623  000790  51C2               	movf	_sum& (0+255),w,b
  1624  000792  0100               	movlb	0	; () banked
  1625  000794  11C3               	iorwf	(_sum+1)& (0+255),w,b
  1626  000796  A4D8               	btfss	status,2,c
  1627  000798  D005               	goto	l1337
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;main.c: 236: sum = 32;
  1631  00079A  0E00               	movlw	0
  1632  00079C  0100               	movlb	0	; () banked
  1633  00079E  6FC3               	movwf	(_sum+1)& (0+255),b
  1634  0007A0  0E20               	movlw	32
  1635  0007A2  6FC2               	movwf	_sum& (0+255),b
  1636  0007A4                     l1337:
  1637  0007A4  FFFF               	dw	65535	; assembler added errata NOP
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;main.c: 237: }
  1641                           ;main.c: 238: sum = sum - 1;
  1642  0007A6  0EFF               	movlw	255
  1643  0007A8  0100               	movlb	0	; () banked
  1644  0007AA  25C2               	addwf	_sum& (0+255),w,b
  1645  0007AC  0100               	movlb	0	; () banked
  1646  0007AE  6FC2               	movwf	_sum& (0+255),b
  1647  0007B0  0EFF               	movlw	255
  1648  0007B2  0100               	movlb	0	; () banked
  1649  0007B4  21C3               	addwfc	(_sum+1)& (0+255),w,b
  1650  0007B6  0100               	movlb	0	; () banked
  1651  0007B8  6FC3               	movwf	(_sum+1)& (0+255),b
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;main.c: 239: LATB = sum;
  1655  0007BA  C0C2  FF8A         	movff	_sum,3978	;volatile
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;main.c: 240: for (long a = 1; a < 217392; a++) {
  1659  0007BE  0E01               	movlw	1
  1660  0007C0  0100               	movlb	0	; () banked
  1661  0007C2  6FA4               	movwf	main@a_183& (0+255),b
  1662  0007C4  0E00               	movlw	0
  1663  0007C6  6FA5               	movwf	(main@a_183+1)& (0+255),b
  1664  0007C8  0E00               	movlw	0
  1665  0007CA  6FA6               	movwf	(main@a_183+2)& (0+255),b
  1666  0007CC  0E00               	movlw	0
  1667  0007CE  6FA7               	movwf	(main@a_183+3)& (0+255),b
  1668  0007D0  0100               	movlb	0	; () banked
  1669  0007D2  BFA7               	btfsc	(main@a_183+3)& (0+255),7,b
  1670  0007D4  D00F               	goto	l104
  1671  0007D6  0100               	movlb	0	; () banked
  1672  0007D8  51A7               	movf	(main@a_183+3)& (0+255),w,b
  1673  0007DA  E11C               	bnz	l105
  1674  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  1675  0007DE  0E30               	movlw	48
  1676  0007E0  0100               	movlb	0	; () banked
  1677  0007E2  5DA4               	subwf	main@a_183& (0+255),w,b
  1678  0007E4  0E51               	movlw	81
  1679  0007E6  0100               	movlb	0	; () banked
  1680  0007E8  59A5               	subwfb	(main@a_183+1)& (0+255),w,b
  1681  0007EA  0E03               	movlw	3
  1682  0007EC  0100               	movlb	0	; () banked
  1683  0007EE  59A6               	subwfb	(main@a_183+2)& (0+255),w,b
  1684  0007F0  B0D8               	btfsc	status,0,c
  1685  0007F2  D010               	goto	l105
  1686  0007F4                     l104:
  1687  0007F4  FFFF               	dw	65535	; assembler added errata NOP
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;main.c: 241: __nop();
  1691  0007F6  F000               	nop	
  1692  0007F8  0E01               	movlw	1
  1693  0007FA  0100               	movlb	0	; () banked
  1694  0007FC  27A4               	addwf	main@a_183& (0+255),f,b
  1695  0007FE  0E00               	movlw	0
  1696  000800  23A5               	addwfc	(main@a_183+1)& (0+255),f,b
  1697  000802  23A6               	addwfc	(main@a_183+2)& (0+255),f,b
  1698  000804  23A7               	addwfc	(main@a_183+3)& (0+255),f,b
  1699  000806  0100               	movlb	0	; () banked
  1700  000808  BFA7               	btfsc	(main@a_183+3)& (0+255),7,b
  1701  00080A  D7F4               	goto	l104
  1702  00080C  0100               	movlb	0	; () banked
  1703  00080E  51A7               	movf	(main@a_183+3)& (0+255),w,b
  1704  000810  E101               	bnz	u1600
  1705  000812  D7E4               	goto	L10
  1706  000814                     u1600:
  1707  000814                     l105:
  1708  000814  FFFF               	dw	65535	; assembler added errata NOP
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;main.c: 242: }
  1712                           ;main.c: 243: if (PORTCbits.RC4 != 1 || PORTCbits.RC5 != 0) {
  1713  000816  B882               	btfsc	3970,4,c	;volatile
  1714                           
  1715                           ; BSR set to: 0
  1716  000818  BA82               	btfsc	3970,5,c	;volatile
  1717  00081A  D0BB               	goto	l65
  1718  00081C                     l102:
  1719  00081C  FFFF               	dw	65535	; assembler added errata NOP
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;main.c: 245: }
  1723                           ;main.c: 246: }
  1724                           ;main.c: 247: comp = PORTA;
  1725  00081E  CF80 F0C0          	movff	3968,_comp	;volatile
  1726  000822  0100               	movlb	0	; () banked
  1727  000824  6BC1               	clrf	(_comp+1)& (0+255),b
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;main.c: 248: if (comp < sum) {
  1731  000826  0100               	movlb	0	; () banked
  1732  000828  51C2               	movf	_sum& (0+255),w,b
  1733  00082A  0100               	movlb	0	; () banked
  1734  00082C  5DC0               	subwf	_comp& (0+255),w,b
  1735  00082E  0100               	movlb	0	; () banked
  1736  000830  51C1               	movf	(_comp+1)& (0+255),w,b
  1737  000832  0A80               	xorlw	128
  1738  000834  6E20               	movwf	??_main& (0+255),c
  1739  000836  0100               	movlb	0	; () banked
  1740  000838  51C3               	movf	(_sum+1)& (0+255),w,b
  1741  00083A  0A80               	xorlw	128
  1742  00083C  5820               	subwfb	??_main& (0+255),w,c
  1743  00083E  B0D8               	btfsc	status,0,c
  1744  000840  D04B               	goto	l109
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;main.c: 250: LATCbits.LC0 = 0;
  1748  000842  908B               	bcf	3979,0,c	;volatile
  1749                           
  1750                           ;main.c: 251: LATCbits.LC1 = 0;
  1751  000844  928B               	bcf	3979,1,c	;volatile
  1752                           
  1753                           ;main.c: 252: LATCbits.LC2 = 0;
  1754  000846  948B               	bcf	3979,2,c	;volatile
  1755                           
  1756                           ;main.c: 253: LATCbits.LC3 = 1;
  1757  000848  868B               	bsf	3979,3,c	;volatile
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;main.c: 254: if (sum == 0) {
  1761  00084A  0100               	movlb	0	; () banked
  1762  00084C  51C2               	movf	_sum& (0+255),w,b
  1763  00084E  0100               	movlb	0	; () banked
  1764  000850  11C3               	iorwf	(_sum+1)& (0+255),w,b
  1765  000852  A4D8               	btfss	status,2,c
  1766  000854  D005               	goto	l1357
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;main.c: 255: sum = 32;
  1770  000856  0E00               	movlw	0
  1771  000858  0100               	movlb	0	; () banked
  1772  00085A  6FC3               	movwf	(_sum+1)& (0+255),b
  1773  00085C  0E20               	movlw	32
  1774  00085E  6FC2               	movwf	_sum& (0+255),b
  1775  000860                     l1357:
  1776  000860  FFFF               	dw	65535	; assembler added errata NOP
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;main.c: 256: }
  1780                           ;main.c: 257: sum = sum - 1;
  1781  000862  0EFF               	movlw	255
  1782  000864  0100               	movlb	0	; () banked
  1783  000866  25C2               	addwf	_sum& (0+255),w,b
  1784  000868  0100               	movlb	0	; () banked
  1785  00086A  6FC2               	movwf	_sum& (0+255),b
  1786  00086C  0EFF               	movlw	255
  1787  00086E  0100               	movlb	0	; () banked
  1788  000870  21C3               	addwfc	(_sum+1)& (0+255),w,b
  1789  000872  0100               	movlb	0	; () banked
  1790  000874  6FC3               	movwf	(_sum+1)& (0+255),b
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;main.c: 258: LATB = sum;
  1794  000876  C0C2  FF8A         	movff	_sum,3978	;volatile
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;main.c: 259: for (long a = 1; a < 217392; a++) {
  1798  00087A  0E01               	movlw	1
  1799  00087C  0100               	movlb	0	; () banked
  1800  00087E  6FA8               	movwf	main@a_184& (0+255),b
  1801  000880  0E00               	movlw	0
  1802  000882  6FA9               	movwf	(main@a_184+1)& (0+255),b
  1803  000884  0E00               	movlw	0
  1804  000886  6FAA               	movwf	(main@a_184+2)& (0+255),b
  1805  000888  0E00               	movlw	0
  1806  00088A  6FAB               	movwf	(main@a_184+3)& (0+255),b
  1807  00088C  0100               	movlb	0	; () banked
  1808  00088E  BFAB               	btfsc	(main@a_184+3)& (0+255),7,b
  1809  000890  D00F               	goto	l111
  1810  000892  0100               	movlb	0	; () banked
  1811  000894  51AB               	movf	(main@a_184+3)& (0+255),w,b
  1812  000896  E11C               	bnz	l112
  1813  000898  FFFF               	dw	65535	; assembler added errata NOP
  1814  00089A  0E30               	movlw	48
  1815  00089C  0100               	movlb	0	; () banked
  1816  00089E  5DA8               	subwf	main@a_184& (0+255),w,b
  1817  0008A0  0E51               	movlw	81
  1818  0008A2  0100               	movlb	0	; () banked
  1819  0008A4  59A9               	subwfb	(main@a_184+1)& (0+255),w,b
  1820  0008A6  0E03               	movlw	3
  1821  0008A8  0100               	movlb	0	; () banked
  1822  0008AA  59AA               	subwfb	(main@a_184+2)& (0+255),w,b
  1823  0008AC  B0D8               	btfsc	status,0,c
  1824  0008AE  D010               	goto	l112
  1825  0008B0                     l111:
  1826  0008B0  FFFF               	dw	65535	; assembler added errata NOP
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;main.c: 260: __nop();
  1830  0008B2  F000               	nop	
  1831  0008B4  0E01               	movlw	1
  1832  0008B6  0100               	movlb	0	; () banked
  1833  0008B8  27A8               	addwf	main@a_184& (0+255),f,b
  1834  0008BA  0E00               	movlw	0
  1835  0008BC  23A9               	addwfc	(main@a_184+1)& (0+255),f,b
  1836  0008BE  23AA               	addwfc	(main@a_184+2)& (0+255),f,b
  1837  0008C0  23AB               	addwfc	(main@a_184+3)& (0+255),f,b
  1838  0008C2  0100               	movlb	0	; () banked
  1839  0008C4  BFAB               	btfsc	(main@a_184+3)& (0+255),7,b
  1840  0008C6  D7F4               	goto	l111
  1841  0008C8  0100               	movlb	0	; () banked
  1842  0008CA  51AB               	movf	(main@a_184+3)& (0+255),w,b
  1843  0008CC  E101               	bnz	u1660
  1844  0008CE  D7E4               	goto	L11
  1845  0008D0                     u1660:
  1846  0008D0                     l112:
  1847  0008D0  FFFF               	dw	65535	; assembler added errata NOP
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;main.c: 261: }
  1851                           ;main.c: 262: if (PORTCbits.RC4 != 1 || PORTCbits.RC5 != 0) {
  1852  0008D2  B882               	btfsc	3970,4,c	;volatile
  1853                           
  1854                           ; BSR set to: 0
  1855  0008D4  BA82               	btfsc	3970,5,c	;volatile
  1856  0008D6  D05D               	goto	l65
  1857  0008D8                     l109:
  1858  0008D8  FFFF               	dw	65535	; assembler added errata NOP
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;main.c: 264: }
  1862                           ;main.c: 265: }
  1863                           ;main.c: 266: comp = PORTA;
  1864  0008DA  CF80 F0C0          	movff	3968,_comp	;volatile
  1865  0008DE  0100               	movlb	0	; () banked
  1866  0008E0  6BC1               	clrf	(_comp+1)& (0+255),b
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;main.c: 267: if (comp < sum) {
  1870  0008E2  0100               	movlb	0	; () banked
  1871  0008E4  51C2               	movf	_sum& (0+255),w,b
  1872  0008E6  0100               	movlb	0	; () banked
  1873  0008E8  5DC0               	subwf	_comp& (0+255),w,b
  1874  0008EA  0100               	movlb	0	; () banked
  1875  0008EC  51C1               	movf	(_comp+1)& (0+255),w,b
  1876  0008EE  0A80               	xorlw	128
  1877  0008F0  6E20               	movwf	??_main& (0+255),c
  1878  0008F2  0100               	movlb	0	; () banked
  1879  0008F4  51C3               	movf	(_sum+1)& (0+255),w,b
  1880  0008F6  0A80               	xorlw	128
  1881  0008F8  5820               	subwfb	??_main& (0+255),w,c
  1882  0008FA  B0D8               	btfsc	status,0,c
  1883  0008FC  D04A               	goto	l65
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;main.c: 268: LATCbits.LC0 = 1;
  1887  0008FE  808B               	bsf	3979,0,c	;volatile
  1888                           
  1889                           ;main.c: 269: LATCbits.LC1 = 0;
  1890  000900  928B               	bcf	3979,1,c	;volatile
  1891                           
  1892                           ;main.c: 270: LATCbits.LC2 = 0;
  1893  000902  948B               	bcf	3979,2,c	;volatile
  1894                           
  1895                           ;main.c: 271: LATCbits.LC3 = 1;
  1896  000904  868B               	bsf	3979,3,c	;volatile
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;main.c: 272: if (sum == 0) {
  1900  000906  0100               	movlb	0	; () banked
  1901  000908  51C2               	movf	_sum& (0+255),w,b
  1902  00090A  0100               	movlb	0	; () banked
  1903  00090C  11C3               	iorwf	(_sum+1)& (0+255),w,b
  1904  00090E  A4D8               	btfss	status,2,c
  1905  000910  D005               	goto	l1377
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;main.c: 273: sum = 32;
  1909  000912  0E00               	movlw	0
  1910  000914  0100               	movlb	0	; () banked
  1911  000916  6FC3               	movwf	(_sum+1)& (0+255),b
  1912  000918  0E20               	movlw	32
  1913  00091A  6FC2               	movwf	_sum& (0+255),b
  1914  00091C                     l1377:
  1915  00091C  FFFF               	dw	65535	; assembler added errata NOP
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;main.c: 274: }
  1919                           ;main.c: 275: sum = sum - 1;
  1920  00091E  0EFF               	movlw	255
  1921  000920  0100               	movlb	0	; () banked
  1922  000922  25C2               	addwf	_sum& (0+255),w,b
  1923  000924  0100               	movlb	0	; () banked
  1924  000926  6FC2               	movwf	_sum& (0+255),b
  1925  000928  0EFF               	movlw	255
  1926  00092A  0100               	movlb	0	; () banked
  1927  00092C  21C3               	addwfc	(_sum+1)& (0+255),w,b
  1928  00092E  0100               	movlb	0	; () banked
  1929  000930  6FC3               	movwf	(_sum+1)& (0+255),b
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;main.c: 276: LATB = sum;
  1933  000932  C0C2  FF8A         	movff	_sum,3978	;volatile
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;main.c: 277: for (long a = 1; a < 217392; a++) {
  1937  000936  0E01               	movlw	1
  1938  000938  0100               	movlb	0	; () banked
  1939  00093A  6FAC               	movwf	main@a_185& (0+255),b
  1940  00093C  0E00               	movlw	0
  1941  00093E  6FAD               	movwf	(main@a_185+1)& (0+255),b
  1942  000940  0E00               	movlw	0
  1943  000942  6FAE               	movwf	(main@a_185+2)& (0+255),b
  1944  000944  0E00               	movlw	0
  1945  000946  6FAF               	movwf	(main@a_185+3)& (0+255),b
  1946  000948  0100               	movlb	0	; () banked
  1947  00094A  BFAF               	btfsc	(main@a_185+3)& (0+255),7,b
  1948  00094C  D00F               	goto	l118
  1949  00094E  0100               	movlb	0	; () banked
  1950  000950  51AF               	movf	(main@a_185+3)& (0+255),w,b
  1951  000952  E11C               	bnz	l119
  1952  000954  FFFF               	dw	65535	; assembler added errata NOP
  1953  000956  0E30               	movlw	48
  1954  000958  0100               	movlb	0	; () banked
  1955  00095A  5DAC               	subwf	main@a_185& (0+255),w,b
  1956  00095C  0E51               	movlw	81
  1957  00095E  0100               	movlb	0	; () banked
  1958  000960  59AD               	subwfb	(main@a_185+1)& (0+255),w,b
  1959  000962  0E03               	movlw	3
  1960  000964  0100               	movlb	0	; () banked
  1961  000966  59AE               	subwfb	(main@a_185+2)& (0+255),w,b
  1962  000968  B0D8               	btfsc	status,0,c
  1963  00096A  D010               	goto	l119
  1964  00096C                     l118:
  1965  00096C  FFFF               	dw	65535	; assembler added errata NOP
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;main.c: 278: __nop();
  1969  00096E  F000               	nop	
  1970  000970  0E01               	movlw	1
  1971  000972  0100               	movlb	0	; () banked
  1972  000974  27AC               	addwf	main@a_185& (0+255),f,b
  1973  000976  0E00               	movlw	0
  1974  000978  23AD               	addwfc	(main@a_185+1)& (0+255),f,b
  1975  00097A  23AE               	addwfc	(main@a_185+2)& (0+255),f,b
  1976  00097C  23AF               	addwfc	(main@a_185+3)& (0+255),f,b
  1977  00097E  0100               	movlb	0	; () banked
  1978  000980  BFAF               	btfsc	(main@a_185+3)& (0+255),7,b
  1979  000982  D7F4               	goto	l118
  1980  000984  0100               	movlb	0	; () banked
  1981  000986  51AF               	movf	(main@a_185+3)& (0+255),w,b
  1982  000988  E101               	bnz	u1720
  1983  00098A  D7E4               	goto	L12
  1984  00098C                     u1720:
  1985  00098C                     l119:
  1986  00098C  FFFF               	dw	65535	; assembler added errata NOP
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;main.c: 279: }
  1990                           ;main.c: 280: if (PORTCbits.RC4 != 1 || PORTCbits.RC5 != 0) {
  1991  00098E  B882               	btfsc	3970,4,c	;volatile
  1992                           
  1993                           ; BSR set to: 0
  1994  000990  5082               	movf	3970,w,c	;volatile
  1995  000992                     l65:
  1996  000992  FFFF               	dw	65535	; assembler added errata NOP
  1997  000994  B882               	btfsc	3970,4,c	;volatile
  1998  000996  BA82               	btfsc	3970,5,c	;volatile
  1999  000998  D178               	goto	l126
  2000  00099A  D511               	goto	l66
  2001  00099C                     l127:
  2002  00099C  FFFF               	dw	65535	; assembler added errata NOP
  2003                           
  2004                           ;main.c: 288: comp = PORTA;
  2005  00099E  CF80 F0C0          	movff	3968,_comp	;volatile
  2006  0009A2  0100               	movlb	0	; () banked
  2007  0009A4  6BC1               	clrf	(_comp+1)& (0+255),b
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;main.c: 289: if (comp < sum) {
  2011  0009A6  0100               	movlb	0	; () banked
  2012  0009A8  51C2               	movf	_sum& (0+255),w,b
  2013  0009AA  0100               	movlb	0	; () banked
  2014  0009AC  5DC0               	subwf	_comp& (0+255),w,b
  2015  0009AE  0100               	movlb	0	; () banked
  2016  0009B0  51C1               	movf	(_comp+1)& (0+255),w,b
  2017  0009B2  0A80               	xorlw	128
  2018  0009B4  6E20               	movwf	??_main& (0+255),c
  2019  0009B6  0100               	movlb	0	; () banked
  2020  0009B8  51C3               	movf	(_sum+1)& (0+255),w,b
  2021  0009BA  0A80               	xorlw	128
  2022  0009BC  5820               	subwfb	??_main& (0+255),w,c
  2023  0009BE  B0D8               	btfsc	status,0,c
  2024  0009C0  D04B               	goto	l128
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;main.c: 290: LATCbits.LC0 = 1;
  2028  0009C2  808B               	bsf	3979,0,c	;volatile
  2029                           
  2030                           ;main.c: 291: LATCbits.LC1 = 0;
  2031  0009C4  928B               	bcf	3979,1,c	;volatile
  2032                           
  2033                           ;main.c: 292: LATCbits.LC2 = 0;
  2034  0009C6  948B               	bcf	3979,2,c	;volatile
  2035                           
  2036                           ;main.c: 293: LATCbits.LC3 = 0;
  2037  0009C8  968B               	bcf	3979,3,c	;volatile
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;main.c: 294: if (sum == 0) {
  2041  0009CA  0100               	movlb	0	; () banked
  2042  0009CC  51C2               	movf	_sum& (0+255),w,b
  2043  0009CE  0100               	movlb	0	; () banked
  2044  0009D0  11C3               	iorwf	(_sum+1)& (0+255),w,b
  2045  0009D2  A4D8               	btfss	status,2,c
  2046  0009D4  D005               	goto	l1399
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;main.c: 295: sum = 32;
  2050  0009D6  0E00               	movlw	0
  2051  0009D8  0100               	movlb	0	; () banked
  2052  0009DA  6FC3               	movwf	(_sum+1)& (0+255),b
  2053  0009DC  0E20               	movlw	32
  2054  0009DE  6FC2               	movwf	_sum& (0+255),b
  2055  0009E0                     l1399:
  2056  0009E0  FFFF               	dw	65535	; assembler added errata NOP
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;main.c: 296: }
  2060                           ;main.c: 297: sum = sum - 1;
  2061  0009E2  0EFF               	movlw	255
  2062  0009E4  0100               	movlb	0	; () banked
  2063  0009E6  25C2               	addwf	_sum& (0+255),w,b
  2064  0009E8  0100               	movlb	0	; () banked
  2065  0009EA  6FC2               	movwf	_sum& (0+255),b
  2066  0009EC  0EFF               	movlw	255
  2067  0009EE  0100               	movlb	0	; () banked
  2068  0009F0  21C3               	addwfc	(_sum+1)& (0+255),w,b
  2069  0009F2  0100               	movlb	0	; () banked
  2070  0009F4  6FC3               	movwf	(_sum+1)& (0+255),b
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;main.c: 298: LATB = sum;
  2074  0009F6  C0C2  FF8A         	movff	_sum,3978	;volatile
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;main.c: 299: for (long a = 1; a < 217392; a++) {
  2078  0009FA  0E01               	movlw	1
  2079  0009FC  0100               	movlb	0	; () banked
  2080  0009FE  6FB0               	movwf	main@a_186& (0+255),b
  2081  000A00  0E00               	movlw	0
  2082  000A02  6FB1               	movwf	(main@a_186+1)& (0+255),b
  2083  000A04  0E00               	movlw	0
  2084  000A06  6FB2               	movwf	(main@a_186+2)& (0+255),b
  2085  000A08  0E00               	movlw	0
  2086  000A0A  6FB3               	movwf	(main@a_186+3)& (0+255),b
  2087  000A0C  0100               	movlb	0	; () banked
  2088  000A0E  BFB3               	btfsc	(main@a_186+3)& (0+255),7,b
  2089  000A10  D00F               	goto	l130
  2090  000A12  0100               	movlb	0	; () banked
  2091  000A14  51B3               	movf	(main@a_186+3)& (0+255),w,b
  2092  000A16  E11C               	bnz	l131
  2093  000A18  FFFF               	dw	65535	; assembler added errata NOP
  2094  000A1A  0E30               	movlw	48
  2095  000A1C  0100               	movlb	0	; () banked
  2096  000A1E  5DB0               	subwf	main@a_186& (0+255),w,b
  2097  000A20  0E51               	movlw	81
  2098  000A22  0100               	movlb	0	; () banked
  2099  000A24  59B1               	subwfb	(main@a_186+1)& (0+255),w,b
  2100  000A26  0E03               	movlw	3
  2101  000A28  0100               	movlb	0	; () banked
  2102  000A2A  59B2               	subwfb	(main@a_186+2)& (0+255),w,b
  2103  000A2C  B0D8               	btfsc	status,0,c
  2104  000A2E  D010               	goto	l131
  2105  000A30                     l130:
  2106  000A30  FFFF               	dw	65535	; assembler added errata NOP
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;main.c: 300: __nop();
  2110  000A32  F000               	nop	
  2111  000A34  0E01               	movlw	1
  2112  000A36  0100               	movlb	0	; () banked
  2113  000A38  27B0               	addwf	main@a_186& (0+255),f,b
  2114  000A3A  0E00               	movlw	0
  2115  000A3C  23B1               	addwfc	(main@a_186+1)& (0+255),f,b
  2116  000A3E  23B2               	addwfc	(main@a_186+2)& (0+255),f,b
  2117  000A40  23B3               	addwfc	(main@a_186+3)& (0+255),f,b
  2118  000A42  0100               	movlb	0	; () banked
  2119  000A44  BFB3               	btfsc	(main@a_186+3)& (0+255),7,b
  2120  000A46  D7F4               	goto	l130
  2121  000A48  0100               	movlb	0	; () banked
  2122  000A4A  51B3               	movf	(main@a_186+3)& (0+255),w,b
  2123  000A4C  E101               	bnz	u1790
  2124  000A4E  D7E4               	goto	L13
  2125  000A50                     u1790:
  2126  000A50                     l131:
  2127  000A50  FFFF               	dw	65535	; assembler added errata NOP
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;main.c: 301: }
  2131                           ;main.c: 302: if (PORTCbits.RC4 != 0 || PORTCbits.RC5 != 1) {
  2132  000A52  A882               	btfss	3970,4,c	;volatile
  2133                           
  2134                           ; BSR set to: 0
  2135  000A54  AA82               	btfss	3970,5,c	;volatile
  2136  000A56  D119               	goto	l126
  2137  000A58                     l128:
  2138  000A58  FFFF               	dw	65535	; assembler added errata NOP
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;main.c: 304: }
  2142                           ;main.c: 305: }
  2143                           ;main.c: 306: comp = PORTA;
  2144  000A5A  CF80 F0C0          	movff	3968,_comp	;volatile
  2145  000A5E  0100               	movlb	0	; () banked
  2146  000A60  6BC1               	clrf	(_comp+1)& (0+255),b
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;main.c: 307: if (comp < sum) {
  2150  000A62  0100               	movlb	0	; () banked
  2151  000A64  51C2               	movf	_sum& (0+255),w,b
  2152  000A66  0100               	movlb	0	; () banked
  2153  000A68  5DC0               	subwf	_comp& (0+255),w,b
  2154  000A6A  0100               	movlb	0	; () banked
  2155  000A6C  51C1               	movf	(_comp+1)& (0+255),w,b
  2156  000A6E  0A80               	xorlw	128
  2157  000A70  6E20               	movwf	??_main& (0+255),c
  2158  000A72  0100               	movlb	0	; () banked
  2159  000A74  51C3               	movf	(_sum+1)& (0+255),w,b
  2160  000A76  0A80               	xorlw	128
  2161  000A78  5820               	subwfb	??_main& (0+255),w,c
  2162  000A7A  B0D8               	btfsc	status,0,c
  2163  000A7C  D04B               	goto	l135
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;main.c: 308: LATCbits.LC0 = 0;
  2167  000A7E  908B               	bcf	3979,0,c	;volatile
  2168                           
  2169                           ;main.c: 309: LATCbits.LC1 = 1;
  2170  000A80  828B               	bsf	3979,1,c	;volatile
  2171                           
  2172                           ;main.c: 310: LATCbits.LC2 = 0;
  2173  000A82  948B               	bcf	3979,2,c	;volatile
  2174                           
  2175                           ;main.c: 311: LATCbits.LC3 = 0;
  2176  000A84  968B               	bcf	3979,3,c	;volatile
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;main.c: 312: if (sum == 0) {
  2180  000A86  0100               	movlb	0	; () banked
  2181  000A88  51C2               	movf	_sum& (0+255),w,b
  2182  000A8A  0100               	movlb	0	; () banked
  2183  000A8C  11C3               	iorwf	(_sum+1)& (0+255),w,b
  2184  000A8E  A4D8               	btfss	status,2,c
  2185  000A90  D005               	goto	l1419
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;main.c: 313: sum = 32;
  2189  000A92  0E00               	movlw	0
  2190  000A94  0100               	movlb	0	; () banked
  2191  000A96  6FC3               	movwf	(_sum+1)& (0+255),b
  2192  000A98  0E20               	movlw	32
  2193  000A9A  6FC2               	movwf	_sum& (0+255),b
  2194  000A9C                     l1419:
  2195  000A9C  FFFF               	dw	65535	; assembler added errata NOP
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;main.c: 314: }
  2199                           ;main.c: 315: sum = sum - 1;
  2200  000A9E  0EFF               	movlw	255
  2201  000AA0  0100               	movlb	0	; () banked
  2202  000AA2  25C2               	addwf	_sum& (0+255),w,b
  2203  000AA4  0100               	movlb	0	; () banked
  2204  000AA6  6FC2               	movwf	_sum& (0+255),b
  2205  000AA8  0EFF               	movlw	255
  2206  000AAA  0100               	movlb	0	; () banked
  2207  000AAC  21C3               	addwfc	(_sum+1)& (0+255),w,b
  2208  000AAE  0100               	movlb	0	; () banked
  2209  000AB0  6FC3               	movwf	(_sum+1)& (0+255),b
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;main.c: 316: LATB = sum;
  2213  000AB2  C0C2  FF8A         	movff	_sum,3978	;volatile
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;main.c: 317: for (long a = 1; a < 217392; a++) {
  2217  000AB6  0E01               	movlw	1
  2218  000AB8  0100               	movlb	0	; () banked
  2219  000ABA  6FB4               	movwf	main@a_187& (0+255),b
  2220  000ABC  0E00               	movlw	0
  2221  000ABE  6FB5               	movwf	(main@a_187+1)& (0+255),b
  2222  000AC0  0E00               	movlw	0
  2223  000AC2  6FB6               	movwf	(main@a_187+2)& (0+255),b
  2224  000AC4  0E00               	movlw	0
  2225  000AC6  6FB7               	movwf	(main@a_187+3)& (0+255),b
  2226  000AC8  0100               	movlb	0	; () banked
  2227  000ACA  BFB7               	btfsc	(main@a_187+3)& (0+255),7,b
  2228  000ACC  D00F               	goto	l137
  2229  000ACE  0100               	movlb	0	; () banked
  2230  000AD0  51B7               	movf	(main@a_187+3)& (0+255),w,b
  2231  000AD2  E11C               	bnz	l138
  2232  000AD4  FFFF               	dw	65535	; assembler added errata NOP
  2233  000AD6  0E30               	movlw	48
  2234  000AD8  0100               	movlb	0	; () banked
  2235  000ADA  5DB4               	subwf	main@a_187& (0+255),w,b
  2236  000ADC  0E51               	movlw	81
  2237  000ADE  0100               	movlb	0	; () banked
  2238  000AE0  59B5               	subwfb	(main@a_187+1)& (0+255),w,b
  2239  000AE2  0E03               	movlw	3
  2240  000AE4  0100               	movlb	0	; () banked
  2241  000AE6  59B6               	subwfb	(main@a_187+2)& (0+255),w,b
  2242  000AE8  B0D8               	btfsc	status,0,c
  2243  000AEA  D010               	goto	l138
  2244  000AEC                     l137:
  2245  000AEC  FFFF               	dw	65535	; assembler added errata NOP
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;main.c: 318: __nop();
  2249  000AEE  F000               	nop	
  2250  000AF0  0E01               	movlw	1
  2251  000AF2  0100               	movlb	0	; () banked
  2252  000AF4  27B4               	addwf	main@a_187& (0+255),f,b
  2253  000AF6  0E00               	movlw	0
  2254  000AF8  23B5               	addwfc	(main@a_187+1)& (0+255),f,b
  2255  000AFA  23B6               	addwfc	(main@a_187+2)& (0+255),f,b
  2256  000AFC  23B7               	addwfc	(main@a_187+3)& (0+255),f,b
  2257  000AFE  0100               	movlb	0	; () banked
  2258  000B00  BFB7               	btfsc	(main@a_187+3)& (0+255),7,b
  2259  000B02  D7F4               	goto	l137
  2260  000B04  0100               	movlb	0	; () banked
  2261  000B06  51B7               	movf	(main@a_187+3)& (0+255),w,b
  2262  000B08  E101               	bnz	u1850
  2263  000B0A  D7E4               	goto	L14
  2264  000B0C                     u1850:
  2265  000B0C                     l138:
  2266  000B0C  FFFF               	dw	65535	; assembler added errata NOP
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;main.c: 319: }
  2270                           ;main.c: 320: if (PORTCbits.RC4 != 0 || PORTCbits.RC5 != 1) {
  2271  000B0E  A882               	btfss	3970,4,c	;volatile
  2272                           
  2273                           ; BSR set to: 0
  2274  000B10  AA82               	btfss	3970,5,c	;volatile
  2275  000B12  D0BB               	goto	l126
  2276  000B14                     l135:
  2277  000B14  FFFF               	dw	65535	; assembler added errata NOP
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;main.c: 322: }
  2281                           ;main.c: 323: }
  2282                           ;main.c: 324: comp = PORTA;
  2283  000B16  CF80 F0C0          	movff	3968,_comp	;volatile
  2284  000B1A  0100               	movlb	0	; () banked
  2285  000B1C  6BC1               	clrf	(_comp+1)& (0+255),b
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;main.c: 325: if (comp < sum) {
  2289  000B1E  0100               	movlb	0	; () banked
  2290  000B20  51C2               	movf	_sum& (0+255),w,b
  2291  000B22  0100               	movlb	0	; () banked
  2292  000B24  5DC0               	subwf	_comp& (0+255),w,b
  2293  000B26  0100               	movlb	0	; () banked
  2294  000B28  51C1               	movf	(_comp+1)& (0+255),w,b
  2295  000B2A  0A80               	xorlw	128
  2296  000B2C  6E20               	movwf	??_main& (0+255),c
  2297  000B2E  0100               	movlb	0	; () banked
  2298  000B30  51C3               	movf	(_sum+1)& (0+255),w,b
  2299  000B32  0A80               	xorlw	128
  2300  000B34  5820               	subwfb	??_main& (0+255),w,c
  2301  000B36  B0D8               	btfsc	status,0,c
  2302  000B38  D04B               	goto	l142
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;main.c: 326: LATCbits.LC0 = 0;
  2306  000B3A  908B               	bcf	3979,0,c	;volatile
  2307                           
  2308                           ;main.c: 327: LATCbits.LC1 = 0;
  2309  000B3C  928B               	bcf	3979,1,c	;volatile
  2310                           
  2311                           ;main.c: 328: LATCbits.LC2 = 1;
  2312  000B3E  848B               	bsf	3979,2,c	;volatile
  2313                           
  2314                           ;main.c: 329: LATCbits.LC3 = 0;
  2315  000B40  968B               	bcf	3979,3,c	;volatile
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;main.c: 330: if (sum == 0) {
  2319  000B42  0100               	movlb	0	; () banked
  2320  000B44  51C2               	movf	_sum& (0+255),w,b
  2321  000B46  0100               	movlb	0	; () banked
  2322  000B48  11C3               	iorwf	(_sum+1)& (0+255),w,b
  2323  000B4A  A4D8               	btfss	status,2,c
  2324  000B4C  D005               	goto	l1439
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;main.c: 331: sum = 32;
  2328  000B4E  0E00               	movlw	0
  2329  000B50  0100               	movlb	0	; () banked
  2330  000B52  6FC3               	movwf	(_sum+1)& (0+255),b
  2331  000B54  0E20               	movlw	32
  2332  000B56  6FC2               	movwf	_sum& (0+255),b
  2333  000B58                     l1439:
  2334  000B58  FFFF               	dw	65535	; assembler added errata NOP
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;main.c: 332: }
  2338                           ;main.c: 333: sum = sum - 1;
  2339  000B5A  0EFF               	movlw	255
  2340  000B5C  0100               	movlb	0	; () banked
  2341  000B5E  25C2               	addwf	_sum& (0+255),w,b
  2342  000B60  0100               	movlb	0	; () banked
  2343  000B62  6FC2               	movwf	_sum& (0+255),b
  2344  000B64  0EFF               	movlw	255
  2345  000B66  0100               	movlb	0	; () banked
  2346  000B68  21C3               	addwfc	(_sum+1)& (0+255),w,b
  2347  000B6A  0100               	movlb	0	; () banked
  2348  000B6C  6FC3               	movwf	(_sum+1)& (0+255),b
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;main.c: 334: LATB = sum;
  2352  000B6E  C0C2  FF8A         	movff	_sum,3978	;volatile
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;main.c: 335: for (long a = 1; a < 217392; a++) {
  2356  000B72  0E01               	movlw	1
  2357  000B74  0100               	movlb	0	; () banked
  2358  000B76  6FB8               	movwf	main@a_188& (0+255),b
  2359  000B78  0E00               	movlw	0
  2360  000B7A  6FB9               	movwf	(main@a_188+1)& (0+255),b
  2361  000B7C  0E00               	movlw	0
  2362  000B7E  6FBA               	movwf	(main@a_188+2)& (0+255),b
  2363  000B80  0E00               	movlw	0
  2364  000B82  6FBB               	movwf	(main@a_188+3)& (0+255),b
  2365  000B84  0100               	movlb	0	; () banked
  2366  000B86  BFBB               	btfsc	(main@a_188+3)& (0+255),7,b
  2367  000B88  D00F               	goto	l144
  2368  000B8A  0100               	movlb	0	; () banked
  2369  000B8C  51BB               	movf	(main@a_188+3)& (0+255),w,b
  2370  000B8E  E11C               	bnz	l145
  2371  000B90  FFFF               	dw	65535	; assembler added errata NOP
  2372  000B92  0E30               	movlw	48
  2373  000B94  0100               	movlb	0	; () banked
  2374  000B96  5DB8               	subwf	main@a_188& (0+255),w,b
  2375  000B98  0E51               	movlw	81
  2376  000B9A  0100               	movlb	0	; () banked
  2377  000B9C  59B9               	subwfb	(main@a_188+1)& (0+255),w,b
  2378  000B9E  0E03               	movlw	3
  2379  000BA0  0100               	movlb	0	; () banked
  2380  000BA2  59BA               	subwfb	(main@a_188+2)& (0+255),w,b
  2381  000BA4  B0D8               	btfsc	status,0,c
  2382  000BA6  D010               	goto	l145
  2383  000BA8                     l144:
  2384  000BA8  FFFF               	dw	65535	; assembler added errata NOP
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;main.c: 336: __nop();
  2388  000BAA  F000               	nop	
  2389  000BAC  0E01               	movlw	1
  2390  000BAE  0100               	movlb	0	; () banked
  2391  000BB0  27B8               	addwf	main@a_188& (0+255),f,b
  2392  000BB2  0E00               	movlw	0
  2393  000BB4  23B9               	addwfc	(main@a_188+1)& (0+255),f,b
  2394  000BB6  23BA               	addwfc	(main@a_188+2)& (0+255),f,b
  2395  000BB8  23BB               	addwfc	(main@a_188+3)& (0+255),f,b
  2396  000BBA  0100               	movlb	0	; () banked
  2397  000BBC  BFBB               	btfsc	(main@a_188+3)& (0+255),7,b
  2398  000BBE  D7F4               	goto	l144
  2399  000BC0  0100               	movlb	0	; () banked
  2400  000BC2  51BB               	movf	(main@a_188+3)& (0+255),w,b
  2401  000BC4  E101               	bnz	u1910
  2402  000BC6  D7E4               	goto	L15
  2403  000BC8                     u1910:
  2404  000BC8                     l145:
  2405  000BC8  FFFF               	dw	65535	; assembler added errata NOP
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;main.c: 337: }
  2409                           ;main.c: 338: if (PORTCbits.RC4 != 0 || PORTCbits.RC5 != 1) {
  2410  000BCA  A882               	btfss	3970,4,c	;volatile
  2411                           
  2412                           ; BSR set to: 0
  2413  000BCC  AA82               	btfss	3970,5,c	;volatile
  2414  000BCE  D05D               	goto	l126
  2415  000BD0                     l142:
  2416  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;main.c: 340: }
  2420                           ;main.c: 341: }
  2421                           ;main.c: 342: comp = PORTA;
  2422  000BD2  CF80 F0C0          	movff	3968,_comp	;volatile
  2423  000BD6  0100               	movlb	0	; () banked
  2424  000BD8  6BC1               	clrf	(_comp+1)& (0+255),b
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;main.c: 343: if (comp < sum) {
  2428  000BDA  0100               	movlb	0	; () banked
  2429  000BDC  51C2               	movf	_sum& (0+255),w,b
  2430  000BDE  0100               	movlb	0	; () banked
  2431  000BE0  5DC0               	subwf	_comp& (0+255),w,b
  2432  000BE2  0100               	movlb	0	; () banked
  2433  000BE4  51C1               	movf	(_comp+1)& (0+255),w,b
  2434  000BE6  0A80               	xorlw	128
  2435  000BE8  6E20               	movwf	??_main& (0+255),c
  2436  000BEA  0100               	movlb	0	; () banked
  2437  000BEC  51C3               	movf	(_sum+1)& (0+255),w,b
  2438  000BEE  0A80               	xorlw	128
  2439  000BF0  5820               	subwfb	??_main& (0+255),w,c
  2440  000BF2  B0D8               	btfsc	status,0,c
  2441  000BF4  D04A               	goto	l126
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;main.c: 344: LATCbits.LC0 = 0;
  2445  000BF6  908B               	bcf	3979,0,c	;volatile
  2446                           
  2447                           ;main.c: 345: LATCbits.LC1 = 0;
  2448  000BF8  928B               	bcf	3979,1,c	;volatile
  2449                           
  2450                           ;main.c: 346: LATCbits.LC2 = 0;
  2451  000BFA  948B               	bcf	3979,2,c	;volatile
  2452                           
  2453                           ;main.c: 347: LATCbits.LC3 = 1;
  2454  000BFC  868B               	bsf	3979,3,c	;volatile
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;main.c: 348: if (sum == 0) {
  2458  000BFE  0100               	movlb	0	; () banked
  2459  000C00  51C2               	movf	_sum& (0+255),w,b
  2460  000C02  0100               	movlb	0	; () banked
  2461  000C04  11C3               	iorwf	(_sum+1)& (0+255),w,b
  2462  000C06  A4D8               	btfss	status,2,c
  2463  000C08  D005               	goto	l1459
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;main.c: 349: sum = 32;
  2467  000C0A  0E00               	movlw	0
  2468  000C0C  0100               	movlb	0	; () banked
  2469  000C0E  6FC3               	movwf	(_sum+1)& (0+255),b
  2470  000C10  0E20               	movlw	32
  2471  000C12  6FC2               	movwf	_sum& (0+255),b
  2472  000C14                     l1459:
  2473  000C14  FFFF               	dw	65535	; assembler added errata NOP
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;main.c: 350: }
  2477                           ;main.c: 351: sum = sum - 1;
  2478  000C16  0EFF               	movlw	255
  2479  000C18  0100               	movlb	0	; () banked
  2480  000C1A  25C2               	addwf	_sum& (0+255),w,b
  2481  000C1C  0100               	movlb	0	; () banked
  2482  000C1E  6FC2               	movwf	_sum& (0+255),b
  2483  000C20  0EFF               	movlw	255
  2484  000C22  0100               	movlb	0	; () banked
  2485  000C24  21C3               	addwfc	(_sum+1)& (0+255),w,b
  2486  000C26  0100               	movlb	0	; () banked
  2487  000C28  6FC3               	movwf	(_sum+1)& (0+255),b
  2488                           
  2489                           ; BSR set to: 0
  2490                           ;main.c: 352: LATB = sum;
  2491  000C2A  C0C2  FF8A         	movff	_sum,3978	;volatile
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;main.c: 353: for (long a = 1; a < 217392; a++) {
  2495  000C2E  0E01               	movlw	1
  2496  000C30  0100               	movlb	0	; () banked
  2497  000C32  6FBC               	movwf	main@a_189& (0+255),b
  2498  000C34  0E00               	movlw	0
  2499  000C36  6FBD               	movwf	(main@a_189+1)& (0+255),b
  2500  000C38  0E00               	movlw	0
  2501  000C3A  6FBE               	movwf	(main@a_189+2)& (0+255),b
  2502  000C3C  0E00               	movlw	0
  2503  000C3E  6FBF               	movwf	(main@a_189+3)& (0+255),b
  2504  000C40  0100               	movlb	0	; () banked
  2505  000C42  BFBF               	btfsc	(main@a_189+3)& (0+255),7,b
  2506  000C44  D00F               	goto	l151
  2507  000C46  0100               	movlb	0	; () banked
  2508  000C48  51BF               	movf	(main@a_189+3)& (0+255),w,b
  2509  000C4A  E11C               	bnz	l152
  2510  000C4C  FFFF               	dw	65535	; assembler added errata NOP
  2511  000C4E  0E30               	movlw	48
  2512  000C50  0100               	movlb	0	; () banked
  2513  000C52  5DBC               	subwf	main@a_189& (0+255),w,b
  2514  000C54  0E51               	movlw	81
  2515  000C56  0100               	movlb	0	; () banked
  2516  000C58  59BD               	subwfb	(main@a_189+1)& (0+255),w,b
  2517  000C5A  0E03               	movlw	3
  2518  000C5C  0100               	movlb	0	; () banked
  2519  000C5E  59BE               	subwfb	(main@a_189+2)& (0+255),w,b
  2520  000C60  B0D8               	btfsc	status,0,c
  2521  000C62  D010               	goto	l152
  2522  000C64                     l151:
  2523  000C64  FFFF               	dw	65535	; assembler added errata NOP
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;main.c: 354: __nop();
  2527  000C66  F000               	nop	
  2528  000C68  0E01               	movlw	1
  2529  000C6A  0100               	movlb	0	; () banked
  2530  000C6C  27BC               	addwf	main@a_189& (0+255),f,b
  2531  000C6E  0E00               	movlw	0
  2532  000C70  23BD               	addwfc	(main@a_189+1)& (0+255),f,b
  2533  000C72  23BE               	addwfc	(main@a_189+2)& (0+255),f,b
  2534  000C74  23BF               	addwfc	(main@a_189+3)& (0+255),f,b
  2535  000C76  0100               	movlb	0	; () banked
  2536  000C78  BFBF               	btfsc	(main@a_189+3)& (0+255),7,b
  2537  000C7A  D7F4               	goto	l151
  2538  000C7C  0100               	movlb	0	; () banked
  2539  000C7E  51BF               	movf	(main@a_189+3)& (0+255),w,b
  2540  000C80  E101               	bnz	u1970
  2541  000C82  D7E4               	goto	L16
  2542  000C84                     u1970:
  2543  000C84                     l152:
  2544  000C84  FFFF               	dw	65535	; assembler added errata NOP
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;main.c: 355: }
  2548                           ;main.c: 356: if (PORTCbits.RC4 != 0 || PORTCbits.RC5 != 1) {
  2549  000C86  A882               	btfss	3970,4,c	;volatile
  2550                           
  2551                           ; BSR set to: 0
  2552  000C88  5082               	movf	3970,w,c	;volatile
  2553  000C8A                     l126:
  2554  000C8A  FFFF               	dw	65535	; assembler added errata NOP
  2555  000C8C  A882               	btfss	3970,4,c	;volatile
  2556  000C8E  AA82               	btfss	3970,5,c	;volatile
  2557  000C90  EF5A  F000         	goto	l1145
  2558  000C94  D683               	goto	l127
  2559  000C96                     __end_of_main:
  2560                           	opt stack 0
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           status	equ	0xFD8
  2566                           
  2567 ;; *************** function _InitApp *****************
  2568 ;; Defined at:
  2569 ;;		line 28 in file "user.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;		None
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;		None
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2583 ;;      Params:         0       0       0       0       0       0       0
  2584 ;;      Locals:         0       0       0       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0
  2586 ;;      Totals:         0       0       0       0       0       0       0
  2587 ;;Total ram usage:        0 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:    2
  2590 ;; This function calls:
  2591 ;;		Nothing
  2592 ;; This function is called by:
  2593 ;;		_main
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           	psect	text1
  2598  000D10                     __ptext1:
  2599                           	opt stack 0
  2600  000D10                     _InitApp:
  2601                           	opt stack 0
  2602  000D10  FFFF               	dw	65535	; assembler added errata NOP
  2603                           
  2604                           ;user.c: 30: TRISA = 0b0011111;
  2605                           
  2606                           ;incstack = 0
  2607  000D12  0E1F               	movlw	31
  2608  000D14  6E92               	movwf	3986,c	;volatile
  2609                           
  2610                           ;user.c: 31: TRISB = 0b11100000;
  2611  000D16  0EE0               	movlw	224
  2612  000D18  6E93               	movwf	3987,c	;volatile
  2613                           
  2614                           ;user.c: 32: TRISC = 0b10110000;
  2615  000D1A  0EB0               	movlw	176
  2616  000D1C  6E94               	movwf	3988,c	;volatile
  2617                           
  2618                           ;user.c: 33: LATA = 0;
  2619  000D1E  0E00               	movlw	0
  2620  000D20  6E89               	movwf	3977,c	;volatile
  2621                           
  2622                           ;user.c: 34: LATB = 0;
  2623  000D22  0E00               	movlw	0
  2624  000D24  6E8A               	movwf	3978,c	;volatile
  2625                           
  2626                           ;user.c: 35: LATC = 0;
  2627  000D26  0E00               	movlw	0
  2628  000D28  6E8B               	movwf	3979,c	;volatile
  2629                           
  2630                           ;user.c: 36: PORTA = 0;
  2631  000D2A  0E00               	movlw	0
  2632  000D2C  6E80               	movwf	3968,c	;volatile
  2633                           
  2634                           ;user.c: 37: PORTB = 0;
  2635  000D2E  0E00               	movlw	0
  2636  000D30  6E81               	movwf	3969,c	;volatile
  2637                           
  2638                           ;user.c: 38: PORTC = 0;
  2639  000D32  0E00               	movlw	0
  2640  000D34  6E82               	movwf	3970,c	;volatile
  2641                           
  2642                           ;user.c: 40: ADCON1bits.PCFG = 0b0111;
  2643  000D36  50C1               	movf	4033,w,c	;volatile
  2644  000D38  0BF0               	andlw	-16
  2645  000D3A  0907               	iorlw	7
  2646  000D3C  6EC1               	movwf	4033,c	;volatile
  2647  000D3E  0012               	return		;funcret
  2648  000D40  FFFF               	dw	65535	; errata NOP
  2649  000D42                     __end_of_InitApp:
  2650                           	opt stack 0
  2651                           tblptru	equ	0xFF8
  2652                           tblptrh	equ	0xFF7
  2653                           tblptrl	equ	0xFF6
  2654                           tablat	equ	0xFF5
  2655                           status	equ	0xFD8
  2656                           
  2657 ;; *************** function _low_isr *****************
  2658 ;; Defined at:
  2659 ;;		line 67 in file "interrupts.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		None
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2673 ;;      Params:         0       0       0       0       0       0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0
  2675 ;;      Temps:         17       0       0       0       0       0       0
  2676 ;;      Totals:        17       0       0       0       0       0       0
  2677 ;;Total ram usage:       17 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    1
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		Interrupt level 1
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	intcodelo
  2688  000018                     __pintcodelo:
  2689                           	opt stack 0
  2690  000018                     _low_isr:
  2691                           	opt stack 0
  2692  000018  FFFF               	dw	65535	; assembler added errata NOP
  2693                           
  2694                           ;incstack = 0
  2695  00001A  8021               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2696  00001C  CFD8 F00F          	movff	status,??_low_isr
  2697  000020  CFE8 F010          	movff	wreg,??_low_isr+1
  2698  000024  CFE0 F011          	movff	bsr,??_low_isr+2
  2699  000028  CFFA F012          	movff	pclath,??_low_isr+3
  2700  00002C  CFFB F013          	movff	pclatu,??_low_isr+4
  2701  000030  CFE9 F014          	movff	fsr0l,??_low_isr+5
  2702  000034  CFEA F015          	movff	fsr0h,??_low_isr+6
  2703  000038  CFE1 F016          	movff	fsr1l,??_low_isr+7
  2704  00003C  CFE2 F017          	movff	fsr1h,??_low_isr+8
  2705  000040  CFD9 F018          	movff	fsr2l,??_low_isr+9
  2706  000044  CFDA F019          	movff	fsr2h,??_low_isr+10
  2707  000048  CFF3 F01A          	movff	prodl,??_low_isr+11
  2708  00004C  CFF4 F01B          	movff	prodh,??_low_isr+12
  2709  000050  CFF6 F01C          	movff	tblptrl,??_low_isr+13
  2710  000054  CFF7 F01D          	movff	tblptrh,??_low_isr+14
  2711  000058  CFF8 F01E          	movff	tblptru,??_low_isr+15
  2712  00005C  CFF5 F01F          	movff	tablat,??_low_isr+16
  2713  000060  C01F  FFF5         	movff	??_low_isr+16,tablat
  2714  000064  C01E  FFF8         	movff	??_low_isr+15,tblptru
  2715  000068  C01D  FFF7         	movff	??_low_isr+14,tblptrh
  2716  00006C  C01C  FFF6         	movff	??_low_isr+13,tblptrl
  2717  000070  C01B  FFF4         	movff	??_low_isr+12,prodh
  2718  000074  C01A  FFF3         	movff	??_low_isr+11,prodl
  2719  000078  C019  FFDA         	movff	??_low_isr+10,fsr2h
  2720  00007C  C018  FFD9         	movff	??_low_isr+9,fsr2l
  2721  000080  C017  FFE2         	movff	??_low_isr+8,fsr1h
  2722  000084  C016  FFE1         	movff	??_low_isr+7,fsr1l
  2723  000088  C015  FFEA         	movff	??_low_isr+6,fsr0h
  2724  00008C  C014  FFE9         	movff	??_low_isr+5,fsr0l
  2725  000090  C013  FFFB         	movff	??_low_isr+4,pclatu
  2726  000094  C012  FFFA         	movff	??_low_isr+3,pclath
  2727  000098  C011  FFE0         	movff	??_low_isr+2,bsr
  2728  00009C  C010  FFE8         	movff	??_low_isr+1,wreg
  2729  0000A0  C00F  FFD8         	movff	??_low_isr,status
  2730  0000A4  9021               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2731  0000A6  0010               	retfie	
  2732  0000A8  FFFF               	dw	65535	; errata NOP
  2733  0000AA                     __end_of_low_isr:
  2734                           	opt stack 0
  2735                           pclatu	equ	0xFFB
  2736                           pclath	equ	0xFFA
  2737                           tblptru	equ	0xFF8
  2738                           tblptrh	equ	0xFF7
  2739                           tblptrl	equ	0xFF6
  2740                           tablat	equ	0xFF5
  2741                           prodh	equ	0xFF4
  2742                           prodl	equ	0xFF3
  2743                           fsr0h	equ	0xFEA
  2744                           fsr0l	equ	0xFE9
  2745                           wreg	equ	0xFE8
  2746                           fsr1h	equ	0xFE2
  2747                           fsr1l	equ	0xFE1
  2748                           bsr	equ	0xFE0
  2749                           fsr2h	equ	0xFDA
  2750                           fsr2l	equ	0xFD9
  2751                           status	equ	0xFD8
  2752                           
  2753 ;; *************** function _high_isr *****************
  2754 ;; Defined at:
  2755 ;;		line 27 in file "interrupts.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		None
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2769 ;;      Params:         0       0       0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0
  2771 ;;      Temps:         14       0       0       0       0       0       0
  2772 ;;      Totals:        14       0       0       0       0       0       0
  2773 ;;Total ram usage:       14 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		Interrupt level 2
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	intcode
  2783  000008                     __pintcode:
  2784                           	opt stack 0
  2785  000008                     _high_isr:
  2786                           	opt stack 0
  2787  000008  FFFF               	dw	65535	; assembler added errata NOP
  2788                           
  2789                           ;incstack = 0
  2790  00000A  8221               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2791  00000C  EF4B  F006         	goto	int_func
  2792                           pclatu	equ	0xFFB
  2793                           pclath	equ	0xFFA
  2794                           tblptru	equ	0xFF8
  2795                           tblptrh	equ	0xFF7
  2796                           tblptrl	equ	0xFF6
  2797                           tablat	equ	0xFF5
  2798                           prodh	equ	0xFF4
  2799                           prodl	equ	0xFF3
  2800                           fsr0h	equ	0xFEA
  2801                           fsr0l	equ	0xFE9
  2802                           wreg	equ	0xFE8
  2803                           fsr1h	equ	0xFE2
  2804                           fsr1l	equ	0xFE1
  2805                           bsr	equ	0xFE0
  2806                           fsr2h	equ	0xFDA
  2807                           fsr2l	equ	0xFD9
  2808                           status	equ	0xFD8
  2809                           
  2810                           	psect	intcode_body
  2811  000C96                     __pintcode_body:
  2812                           	opt stack 28
  2813  000C96                     int_func:
  2814                           	opt stack 28
  2815  000C96  FFFF               	dw	65535	; errata NOP
  2816  000C98  CFFA F001          	movff	pclath,??_high_isr
  2817  000C9C  CFFB F002          	movff	pclatu,??_high_isr+1
  2818  000CA0  CFE9 F003          	movff	fsr0l,??_high_isr+2
  2819  000CA4  CFEA F004          	movff	fsr0h,??_high_isr+3
  2820  000CA8  CFE1 F005          	movff	fsr1l,??_high_isr+4
  2821  000CAC  CFE2 F006          	movff	fsr1h,??_high_isr+5
  2822  000CB0  CFD9 F007          	movff	fsr2l,??_high_isr+6
  2823  000CB4  CFDA F008          	movff	fsr2h,??_high_isr+7
  2824  000CB8  CFF3 F009          	movff	prodl,??_high_isr+8
  2825  000CBC  CFF4 F00A          	movff	prodh,??_high_isr+9
  2826  000CC0  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  2827  000CC4  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  2828  000CC8  CFF8 F00D          	movff	tblptru,??_high_isr+12
  2829  000CCC  CFF5 F00E          	movff	tablat,??_high_isr+13
  2830  000CD0  C00E  FFF5         	movff	??_high_isr+13,tablat
  2831  000CD4  C00D  FFF8         	movff	??_high_isr+12,tblptru
  2832  000CD8  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  2833  000CDC  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  2834  000CE0  C00A  FFF4         	movff	??_high_isr+9,prodh
  2835  000CE4  C009  FFF3         	movff	??_high_isr+8,prodl
  2836  000CE8  C008  FFDA         	movff	??_high_isr+7,fsr2h
  2837  000CEC  C007  FFD9         	movff	??_high_isr+6,fsr2l
  2838  000CF0  C006  FFE2         	movff	??_high_isr+5,fsr1h
  2839  000CF4  C005  FFE1         	movff	??_high_isr+4,fsr1l
  2840  000CF8  C004  FFEA         	movff	??_high_isr+3,fsr0h
  2841  000CFC  C003  FFE9         	movff	??_high_isr+2,fsr0l
  2842  000D00  C002  FFFB         	movff	??_high_isr+1,pclatu
  2843  000D04  C001  FFFA         	movff	??_high_isr,pclath
  2844  000D08  9221               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2845  000D0A  0011               	retfie		f
  2846  000D0C  FFFF               	dw	65535	; errata NOP
  2847  000D0E                     __end_of_high_isr:
  2848                           	opt stack 0
  2849  000D0E  FFFF               	dw	65535	; assembler added errata NOP
  2850                           pclatu	equ	0xFFB
  2851                           pclath	equ	0xFFA
  2852                           tblptru	equ	0xFF8
  2853                           tblptrh	equ	0xFF7
  2854                           tblptrl	equ	0xFF6
  2855                           tablat	equ	0xFF5
  2856                           prodh	equ	0xFF4
  2857                           prodl	equ	0xFF3
  2858                           fsr0h	equ	0xFEA
  2859                           fsr0l	equ	0xFE9
  2860                           wreg	equ	0xFE8
  2861                           fsr1h	equ	0xFE2
  2862                           fsr1l	equ	0xFE1
  2863                           bsr	equ	0xFE0
  2864                           fsr2h	equ	0xFDA
  2865                           fsr2l	equ	0xFD9
  2866                           status	equ	0xFD8
  2867                           pclatu	equ	0xFFB
  2868                           pclath	equ	0xFFA
  2869                           tblptru	equ	0xFF8
  2870                           tblptrh	equ	0xFF7
  2871                           tblptrl	equ	0xFF6
  2872                           tablat	equ	0xFF5
  2873                           prodh	equ	0xFF4
  2874                           prodl	equ	0xFF3
  2875                           fsr0h	equ	0xFEA
  2876                           fsr0l	equ	0xFE9
  2877                           wreg	equ	0xFE8
  2878                           fsr1h	equ	0xFE2
  2879                           fsr1l	equ	0xFE1
  2880                           bsr	equ	0xFE0
  2881                           fsr2h	equ	0xFDA
  2882                           fsr2l	equ	0xFD9
  2883                           status	equ	0xFD8
  2884                           
  2885                           	psect	rparam
  2886  0000                     pclatu	equ	0xFFB
  2887                           pclath	equ	0xFFA
  2888                           tblptru	equ	0xFF8
  2889                           tblptrh	equ	0xFF7
  2890                           tblptrl	equ	0xFF6
  2891                           tablat	equ	0xFF5
  2892                           prodh	equ	0xFF4
  2893                           prodl	equ	0xFF3
  2894                           fsr0h	equ	0xFEA
  2895                           fsr0l	equ	0xFE9
  2896                           wreg	equ	0xFE8
  2897                           fsr1h	equ	0xFE2
  2898                           fsr1l	equ	0xFE1
  2899                           bsr	equ	0xFE0
  2900                           fsr2h	equ	0xFDA
  2901                           fsr2l	equ	0xFD9
  2902                           status	equ	0xFD8
  2903                           
  2904                           	psect	temp
  2905  000021                     btemp:
  2906                           	opt stack 0
  2907  000021                     	ds	1
  2908  0000                     int$flags	set	btemp
  2909                           pclatu	equ	0xFFB
  2910                           pclath	equ	0xFFA
  2911                           tblptru	equ	0xFF8
  2912                           tblptrh	equ	0xFF7
  2913                           tblptrl	equ	0xFF6
  2914                           tablat	equ	0xFF5
  2915                           prodh	equ	0xFF4
  2916                           prodl	equ	0xFF3
  2917                           fsr0h	equ	0xFEA
  2918                           fsr0l	equ	0xFE9
  2919                           wreg	equ	0xFE8
  2920                           fsr1h	equ	0xFE2
  2921                           fsr1l	equ	0xFE1
  2922                           bsr	equ	0xFE0
  2923                           fsr2h	equ	0xFDA
  2924                           fsr2l	equ	0xFD9
  2925                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     32      32
    BANK0           128     64      68
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                65    65      0     736
                                             31 COMRAM     1     1      0
                                              0 BANK0     64    64      0
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                             17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     40      44       4       53.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     20      20       1       25.4%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      64      14        0.0%
DATA                 0      0      64      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Aug 31 19:50:28 2017

                                                               l32 03B4  
                                                               l41 0238  
                                                               l33 00BC  
                                                               l50 02CE  
                                                               l51 02EE  
                                                               l43 0210  
                                                               l44 0230  
                                                               l36 0154  
                                                               l37 0174  
                                                               l70 0472  
                                                               l48 02F6  
                                                               l81 05E8  
                                                               l65 0992  
                                                               l57 038A  
                                                               l90 067C  
                                                               l74 0532  
                                                               l66 03BE  
                                                               l58 03AA  
                                                               l91 069C  
                                                               l83 05C0  
                                                               l67 047A  
                                                               l84 05E0  
                                                               l76 050A  
                                                               l77 052A  
                                                               l69 0452  
                                                               l95 0760  
                                                               l88 06A4  
                                                               l97 0738  
                                                               l98 0758  
                                                               bsr 000FE0  
                                                     __CFG_CP0$OFF 000000  
                                                     __CFG_CP1$OFF 000000  
                                                     __CFG_CP2$OFF 000000  
                                                     __CFG_CP3$OFF 000000  
                                                      __CFG_OSC$HS 000000  
                                                              l102 081C  
                                                              l111 08B0  
                                                              l112 08D0  
                                                              l104 07F4  
                                                              l105 0814  
                                                              l130 0A30  
                                                              l131 0A50  
                                                              l109 08D8  
                                                              l142 0BD0  
                                                              l126 0C8A  
                                                              l118 096C  
                                                              l151 0C64  
                                                              l135 0B14  
                                                              l127 099C  
                                                              l119 098C  
                                                              l152 0C84  
                                                              l144 0BA8  
                                                              l128 0A58  
                                                              l145 0BC8  
                                                              l137 0AEC  
                                                              l138 0B0C  
                                                     __CFG_CPB$OFF 000000  
                                                     __CFG_CPD$OFF 000000  
                                                     __CFG_BOR$OFF 000000  
                                                              _sum 00C2  
                                                     __CFG_BORV$20 000000  
                                                              wreg 000FE8  
                                                     __CFG_LVP$OFF 000000  
                                                     __CFG_WDT$OFF 000000  
                                                             l1215 033A  
                                                             l1151 00EC  
                                                             l1145 00B4  
                                                             l1155 0104  
                                                             l1317 06E8  
                                                             l1237 0402  
                                                             l1175 01C0  
                                                             l1337 07A4  
                                                             l1257 04BA  
                                                             l1419 0A9C  
                                                             l1195 027E  
                                                             l1357 0860  
                                                             l1277 0570  
                                                             l1439 0B58  
                                                             l1377 091C  
                                                             l1297 062C  
                                                             l1459 0C14  
                                                             l1399 09E0  
                                                             u1100 0230  
                                                             u1040 0174  
                                                             u1300 0472  
                                                             u1220 03AA  
                                                             u1160 02EE  
                                                             u1330 049C  
                                                             u1420 05E0  
                                                             _LATA 000F89  
                                                             _LATB 000F8A  
                                                             _LATC 000F8B  
                                                             u1600 0814  
                                                             u1360 052A  
                                                             u1540 0758  
                                                             u1390 0552  
                                                             u1720 098C  
                                                             u1480 069C  
                                                             u1660 08D0  
                                                             u1910 0BC8  
                                                             u1850 0B0C  
                                                             u1790 0A50  
                                                             u1970 0C84  
                                                             _comp 00C0  
                                                             _main 00AE  
                                                             fsr0h 000FEA  
                                                             fsr1h 000FE2  
                                                             fsr2h 000FDA  
                                                             fsr0l 000FE9  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             btemp 0021  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 00AA  
                                                     ___param_bank 000000  
                                                  __end_of_InitApp 0D42  
                                                    __CFG_OSCS$OFF 000000  
                                                            ?_main 0001  
                                                            _PORTA 000F80  
                                                            _PORTB 000F81  
                                                            _PORTC 000F82  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                    __CFG_PWRT$OFF 000000  
                                                    __CFG_WRT0$OFF 000000  
                                                    __CFG_WRT1$OFF 000000  
                                                    __CFG_WRT2$OFF 000000  
                                                    __CFG_WRT3$OFF 000000  
                                                   __CFG_EBTR0$OFF 000000  
                                                   __CFG_EBTR1$OFF 000000  
                                                   __CFG_EBTR2$OFF 000000  
                                                   __CFG_EBTR3$OFF 000000  
                                                    __CFG_STVR$OFF 000000  
                                                    __CFG_WRTB$OFF 000000  
                                                    __CFG_WRTC$OFF 000000  
                                                    __CFG_WRTD$OFF 000000  
                                                   __CFG_EBTRB$OFF 000000  
                                                            main@a 0080  
                                                  __end_of_low_isr 00AA  
                                                            pclath 000FFA  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                                  __initialization 0D42  
                                                     __end_of_main 0C96  
                                                           ??_main 0020  
                                                    __activetblptr 000000  
                                                   __CFG_WDTPS$128 000000  
                                                        ??_InitApp 0020  
                                                 __end_of_high_isr 0D0E  
                                                        ??_low_isr 000F  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                                       __accesstop 0080  
                                          __end_of__initialization 0D60  
                                                    ___rparam_used 000001  
                                                   __pcstackCOMRAM 0001  
                                                     __pidataBANK0 0D6A  
                                                       __pbssBANK0 00C0  
                                                 __CFG_CCP2MUX$OFF 000000  
                                                        ?_high_isr 0001  
                                                          _InitApp 0D10  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                          __pcinit 0D42  
                                                          __ramtop 0600  
                                                          __ptext0 00AE  
                                                          __ptext1 0D10  
                                                          _low_isr 0018  
                                                       ??_high_isr 0001  
                                                   __pintcode_body 0C96  
                                             end_of_initialization 0D60  
                                                          int_func 0C96  
                                                        _PORTCbits 000F82  
                                              start_initialization 0D42  
                                                      __pdataBANK0 00C2  
                                                    __pcstackBANK0 0080  
                                                __size_of_high_isr 0D06  
                                                         ?_InitApp 0001  
                                                        __pintcode 0008  
                                                      __pintcodelo 0018  
                                                         ?_low_isr 0001  
                                                         _LATCbits 000F8B  
                                                        main@a_180 0098  
                                                        main@a_181 009C  
                                                        main@a_182 00A0  
                                                        main@a_183 00A4  
                                                        main@a_175 0084  
                                                        main@a_184 00A8  
                                                        main@a_176 0088  
                                                        main@a_185 00AC  
                                                        main@a_177 008C  
                                                        main@a_186 00B0  
                                                        main@a_178 0090  
                                                        main@a_187 00B4  
                                                        main@a_179 0094  
                                                        main@a_188 00B8  
                                                        main@a_189 00BC  
                                                       _ADCON1bits 000FC1  
                                                 __size_of_InitApp 0032  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of_low_isr 0092  
                                                         _high_isr 0008  
                                                    __size_of_main 0BE8  
                                                         int$flags 0021  
                                                         intlevel1 0D6C  
                                                         intlevel2 0D6C  
